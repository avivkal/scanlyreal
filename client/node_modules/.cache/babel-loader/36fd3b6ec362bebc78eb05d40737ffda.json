{"ast":null,"code":"import _classCallCheck from\"C:/Users/avivk/Documents/GitHub/scanlyreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/avivk/Documents/GitHub/scanlyreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/avivk/Documents/GitHub/scanlyreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/avivk/Documents/GitHub/scanlyreal/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React,{Component}from'react';import{Button,Modal,Col}from'react-bootstrap';import{connect}from'react-redux';import*as promptActions from'../../Store/Actions/promptActions';import'./prompt.scss';var Prompt=/*#__PURE__*/function(_Component){_inherits(Prompt,_Component);var _super=_createSuper(Prompt);function Prompt(){_classCallCheck(this,Prompt);return _super.apply(this,arguments);}_createClass(Prompt,[{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/_jsxs(Modal,{show:this.props.show,onHide:function onHide(){return _this.props.closePrompt();},children:[/*#__PURE__*/_jsx(Modal.Header,{children:/*#__PURE__*/_jsx(Col,{md:12,className:\"float-right\",children:/*#__PURE__*/_jsx(Modal.Title,{className:\"align\",children:this.props.promptTitle})})}),/*#__PURE__*/_jsx(Modal.Body,{className:\"align\",children:this.props.promptText}),/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(Button,{variant:\"secondary\",onClick:function onClick(){return _this.props.closePrompt();},children:\"Close\"})})]});}}]);return Prompt;}(Component);var mapStateToProps=function mapStateToProps(state){return{show:state.prompt.show,promptTitle:state.prompt.promptTitle,promptText:state.prompt.promptText};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{closePrompt:function closePrompt(){return dispatch(promptActions.closePrompt());}};};export default connect(mapStateToProps,mapDispatchToProps)(Prompt);","map":{"version":3,"sources":["C:/Users/avivk/Documents/GitHub/scanlyreal/client/src/Components/Prompt/Prompt.js"],"names":["React","Component","Button","Modal","Col","connect","promptActions","Prompt","props","show","closePrompt","promptTitle","promptText","mapStateToProps","state","prompt","mapDispatchToProps","dispatch"],"mappings":"wuBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,MAAT,CAAiBC,KAAjB,CAAuBC,GAAvB,KAAkC,iBAAlC,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,mCAA/B,CACA,MAAO,eAAP,C,GACMC,CAAAA,M,8OACO,gBACL,mBACI,MAAC,KAAD,EAAO,IAAI,CAAE,KAAKC,KAAL,CAAWC,IAAxB,CAA8B,MAAM,CAAE,wBAAM,CAAA,KAAI,CAACD,KAAL,CAAWE,WAAX,EAAN,EAAtC,wBACI,KAAC,KAAD,CAAO,MAAP,wBACA,KAAC,GAAD,EAAK,EAAE,CAAE,EAAT,CAAa,SAAS,CAAC,aAAvB,uBACI,KAAC,KAAD,CAAO,KAAP,EAAa,SAAS,CAAC,OAAvB,UAAgC,KAAKF,KAAL,CAAWG,WAA3C,EADJ,EADA,EADJ,cAMI,KAAC,KAAD,CAAO,IAAP,EAAY,SAAS,CAAC,OAAtB,UACK,KAAKH,KAAL,CAAWI,UADhB,EANJ,cAQI,KAAC,KAAD,CAAO,MAAP,wBAES,KAAC,MAAD,EAAQ,OAAO,CAAC,WAAhB,CAA4B,OAAO,CAAE,yBAAM,CAAA,KAAI,CAACJ,KAAL,CAAWE,WAAX,EAAN,EAArC,mBAFT,EARJ,GADJ,CAsBH,C,oBAxBgBT,S,EA4BrB,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACHL,IAAI,CAAEK,KAAK,CAACC,MAAN,CAAaN,IADhB,CAEHE,WAAW,CAAEG,KAAK,CAACC,MAAN,CAAaJ,WAFvB,CAGHC,UAAU,CAAEE,KAAK,CAACC,MAAN,CAAaH,UAHtB,CAAP,CAKH,CAND,CAQA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACC,QAAD,CAAc,CACrC,MAAO,CACHP,WAAW,CAAE,6BAAMO,CAAAA,QAAQ,CAACX,aAAa,CAACI,WAAd,EAAD,CAAd,EADV,CAAP,CAGH,CAJD,CAOA,cAAeL,CAAAA,OAAO,CAACQ,eAAD,CAAkBG,kBAAlB,CAAP,CAA6CT,MAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { Button, Modal,Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux'\r\nimport * as promptActions from '../../Store/Actions/promptActions'\r\nimport './prompt.scss'\r\nclass Prompt extends Component {\r\n    render() {\r\n        return (\r\n            <Modal show={this.props.show} onHide={() => this.props.closePrompt()}> \r\n                <Modal.Header>\r\n                <Col md={12} className=\"float-right\">\r\n                    <Modal.Title className=\"align\">{this.props.promptTitle}</Modal.Title>\r\n                    </Col>\r\n                </Modal.Header>\r\n                <Modal.Body className=\"align\">\r\n                    {this.props.promptText}</Modal.Body>\r\n                <Modal.Footer>\r\n                    \r\n                         <Button variant=\"secondary\" onClick={() => this.props.closePrompt()}>\r\n                            Close\r\n                </Button>\r\n                    \r\n\r\n\r\n\r\n                </Modal.Footer>\r\n            </Modal>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        show: state.prompt.show,\r\n        promptTitle: state.prompt.promptTitle,\r\n        promptText: state.prompt.promptText,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        closePrompt: () => dispatch(promptActions.closePrompt()),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Prompt);\r\n"]},"metadata":{},"sourceType":"module"}