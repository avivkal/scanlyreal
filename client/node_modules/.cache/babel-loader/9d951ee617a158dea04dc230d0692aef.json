{"ast":null,"code":"const userExists = user => {\n  return user !== undefined && user !== null && user !== '';\n};\n\nconst isPartOfString = (main, partOfMain, isReceiver) => {\n  const mainStr = isReceiver ? main.receiver : main.sender;\n  if (mainStr.indexOf(partOfMain) >= 0) return true;\n  return false;\n};\n\nconst messagesExist = messages => {\n  return messages !== undefined && messages !== null && messages.length > 0;\n};\n\nconst setCurrentUser = user => {\n  localStorage.setItem('currentUser', JSON.stringify(user));\n};\n\nconst getCurrentUser = () => {\n  return JSON.parse(localStorage.getItem('currentUser'));\n};\n\nexport { userExists, isPartOfString, setCurrentUser, getCurrentUser, messagesExist };","map":{"version":3,"sources":["C:/Users/avivk/Documents/GitHub/scanlyreal/client/src/UtilityFunctions/functions.js"],"names":["userExists","user","undefined","isPartOfString","main","partOfMain","isReceiver","mainStr","receiver","sender","indexOf","messagesExist","messages","length","setCurrentUser","localStorage","setItem","JSON","stringify","getCurrentUser","parse","getItem"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,IAAD,IAAU;AACzB,SAAOA,IAAI,KAAKC,SAAT,IAAsBD,IAAI,KAAK,IAA/B,IAAuCA,IAAI,KAAK,EAAvD;AACH,CAFD;;AAGA,MAAME,cAAc,GAAG,CAACC,IAAD,EAAOC,UAAP,EAAmBC,UAAnB,KAAkC;AACrD,QAAMC,OAAO,GAAGD,UAAU,GAAGF,IAAI,CAACI,QAAR,GAAmBJ,IAAI,CAACK,MAAlD;AACA,MAAIF,OAAO,CAACG,OAAR,CAAgBL,UAAhB,KAA+B,CAAnC,EACI,OAAO,IAAP;AACJ,SAAO,KAAP;AACH,CALD;;AAOA,MAAMM,aAAa,GAAIC,QAAD,IAAc;AAChC,SAAOA,QAAQ,KAAKV,SAAb,IAA0BU,QAAQ,KAAK,IAAvC,IAA+CA,QAAQ,CAACC,MAAT,GAAkB,CAAxE;AACH,CAFD;;AAIA,MAAMC,cAAc,GAAIb,IAAD,IAAU;AAC7Bc,EAAAA,YAAY,CAACC,OAAb,CAAqB,aAArB,EAAoCC,IAAI,CAACC,SAAL,CAAejB,IAAf,CAApC;AACH,CAFD;;AAGA,MAAMkB,cAAc,GAAG,MAAM;AACzB,SAAOF,IAAI,CAACG,KAAL,CAAWL,YAAY,CAACM,OAAb,CAAqB,aAArB,CAAX,CAAP;AACH,CAFD;;AAIA,SACIrB,UADJ,EAEIG,cAFJ,EAGIW,cAHJ,EAIIK,cAJJ,EAKIR,aALJ","sourcesContent":["const userExists = (user) => {\r\n    return user !== undefined && user !== null && user !== '';\r\n}\r\nconst isPartOfString = (main, partOfMain, isReceiver) => {\r\n    const mainStr = isReceiver ? main.receiver : main.sender;\r\n    if (mainStr.indexOf(partOfMain) >= 0)\r\n        return true\r\n    return false\r\n}\r\n\r\nconst messagesExist = (messages) => {\r\n    return messages !== undefined && messages !== null && messages.length > 0;\r\n}\r\n\r\nconst setCurrentUser = (user) => {\r\n    localStorage.setItem('currentUser', JSON.stringify(user))\r\n}\r\nconst getCurrentUser = () => {\r\n    return JSON.parse(localStorage.getItem('currentUser'))\r\n}\r\n\r\nexport {\r\n    userExists,\r\n    isPartOfString,\r\n    setCurrentUser,\r\n    getCurrentUser,\r\n    messagesExist\r\n}"]},"metadata":{},"sourceType":"module"}