{"ast":null,"code":"import axios from 'axios';\nimport { URL } from '../Constants/const';\naxios.defaults.baseURL = URL;\nconst currentUser = JSON.parse(localStorage.getItem('currentUser'));\nif (currentUser) axios.defaults.headers.common['auth-token'] = currentUser.token;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.interceptors.request.use(config => {\n  let token;\n  console.log(config);\n\n  if (!config.headers.common['auth-token']) {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    if (currentUser) token = currentUser.token;\n\n    if (token) {\n      config.headers.common['auth-token'] = token;\n    }\n  }\n\n  return config;\n}, error => Promise.reject(error));\nexport default axios;","map":{"version":3,"sources":["C:/Users/avivk/Documents/GitHub/scanlyreal/client/src/Axios/config.js"],"names":["axios","URL","defaults","baseURL","currentUser","JSON","parse","localStorage","getItem","headers","common","token","post","interceptors","request","use","config","console","log","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,oBAAlB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyBF,GAAzB;AACA,MAAMG,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,IAAGJ,WAAH,EACIJ,KAAK,CAACE,QAAN,CAAeO,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,IAA8CN,WAAW,CAACO,KAA1D;AACJX,KAAK,CAACE,QAAN,CAAeO,OAAf,CAAuBG,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;AAGAZ,KAAK,CAACa,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACIC,MAAM,IAAI;AACN,MAAIL,KAAJ;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,MAAI,CAACA,MAAM,CAACP,OAAP,CAAeC,MAAf,CAAsB,YAAtB,CAAL,EAA0C;AAC1C,UAAMN,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,QAAGJ,WAAH,EACIO,KAAK,GAAGP,WAAW,CAACO,KAApB;;AACJ,QAAIA,KAAJ,EAAW;AACTK,MAAAA,MAAM,CAACP,OAAP,CAAeC,MAAf,CAAsB,YAAtB,IAAsCC,KAAtC;AACD;AACF;;AAED,SAAOK,MAAP;AACD,CAdL,EAeIG,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAfb;AAkBA,eAAenB,KAAf","sourcesContent":["import axios from 'axios'\r\nimport {URL} from '../Constants/const' \r\n\r\naxios.defaults.baseURL = URL;\r\nconst currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\nif(currentUser)\r\n    axios.defaults.headers.common['auth-token'] = currentUser.token;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\n\r\naxios.interceptors.request.use(\r\n    config => {\r\n        let token;\r\n        console.log(config)\r\n        if (!config.headers.common['auth-token']) {\r\n        const currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\n        if(currentUser)\r\n            token = currentUser.token;\r\n        if (token) {\r\n          config.headers.common['auth-token'] = token;\r\n        }\r\n      }\r\n  \r\n      return config;\r\n    },\r\n    error => Promise.reject(error)\r\n  );\r\n\r\nexport default axios;"]},"metadata":{},"sourceType":"module"}