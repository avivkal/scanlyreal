{"ast":null,"code":"import axios from 'axios';\nimport { URL } from '../Constants/const';\nimport { store } from '../Store/store';\naxios.defaults.baseURL = URL;\nconst currentUser = JSON.parse(localStorage.getItem('currentUser'));\nif (currentUser) axios.defaults.headers.common['auth-token'] = currentUser.token;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.interceptors.request.use(config => {\n  if (!config.headers.Authorization) {\n    const token = JSON.parse(localStorage.getItem(\"keyCloak\")).token;\n\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n  }\n\n  return config;\n}, error => Promise.reject(error));\nexport default axios;","map":{"version":3,"sources":["C:/Users/avivk/Documents/GitHub/scanlyreal/client/src/Axios/config.js"],"names":["axios","URL","store","defaults","baseURL","currentUser","JSON","parse","localStorage","getItem","headers","common","token","post","interceptors","request","use","config","Authorization","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,oBAAlB;AACA,SAAQC,KAAR,QAAoB,gBAApB;AAEAF,KAAK,CAACG,QAAN,CAAeC,OAAf,GAAyBH,GAAzB;AACA,MAAMI,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAApB;AACA,IAAGJ,WAAH,EACIL,KAAK,CAACG,QAAN,CAAeO,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,IAA8CN,WAAW,CAACO,KAA1D;AACJZ,KAAK,CAACG,QAAN,CAAeO,OAAf,CAAuBG,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;AAGAb,KAAK,CAACc,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACIC,MAAM,IAAI;AACR,MAAI,CAACA,MAAM,CAACP,OAAP,CAAeQ,aAApB,EAAmC;AACjC,UAAMN,KAAK,GAAGN,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CG,KAA3D;;AAEA,QAAIA,KAAJ,EAAW;AACTK,MAAAA,MAAM,CAACP,OAAP,CAAeQ,aAAf,GAAgC,UAASN,KAAM,EAA/C;AACD;AACF;;AAED,SAAOK,MAAP;AACD,CAXL,EAYIE,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAZb;AAeA,eAAenB,KAAf","sourcesContent":["import axios from 'axios'\r\nimport {URL} from '../Constants/const' \r\nimport {store} from '../Store/store'\r\n\r\naxios.defaults.baseURL = URL;\r\nconst currentUser = JSON.parse(localStorage.getItem('currentUser'));\r\nif(currentUser)\r\n    axios.defaults.headers.common['auth-token'] = currentUser.token;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\n\r\naxios.interceptors.request.use(\r\n    config => {\r\n      if (!config.headers.Authorization) {\r\n        const token = JSON.parse(localStorage.getItem(\"keyCloak\")).token;\r\n  \r\n        if (token) {\r\n          config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n      }\r\n  \r\n      return config;\r\n    },\r\n    error => Promise.reject(error)\r\n  );\r\n\r\nexport default axios;"]},"metadata":{},"sourceType":"module"}