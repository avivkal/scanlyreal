{"ast":null,"code":"import { actionTypes } from '../actionTypes';\nimport axios from '../../Axios/config';\nimport { setCurrentUser, getCurrentUser } from '../../UtilityFunctions/functions';\nimport { loading, finishedLoading } from './loadingActions';\n\nconst updateWifiDetails = (username, password) => async dispatch => {\n  dispatch(loading());\n\n  try {\n    const user = await axios.post('/wifi', {\n      email: getCurrentUser().email,\n      wifiUsername: username,\n      wifiPassword: password\n    });\n    dispatch(updateUsername(user.data));\n  } catch (error) {\n    dispatch(openPrompt('תקלה', error.response.data));\n  } finally {\n    dispatch(finishedLoading());\n  }\n};\n\nconst updateSettings = (shufersalUsername, shufersalPassword, ramiLevyUsername, ramiLevyPassword, selection, sound) => async dispatch => {\n  dispatch(loading());\n\n  try {\n    const user = await axios.post('/settings', {\n      email: getCurrentUser().email,\n      shufersalUsername,\n      shufersalPassword,\n      ramiLevyUsername,\n      ramiLevyPassword,\n      selection,\n      sound\n    });\n    await dispatch(updateUsername(user.data));\n    console.log(user.data);\n    dispatch(openPrompt('נשמר', 'כל המידע נשמר'));\n  } catch (error) {\n    dispatch(openPrompt('תקלה', error.response.data));\n  } finally {\n    dispatch(finishedLoading());\n  }\n};\n\nconst updateUsername = user => dispatch => {\n  setCurrentUser(user);\n  dispatch(updateToken(user.token));\n  return {\n    type: actionTypes.UPDATE_USERNAME,\n    payload: user\n  };\n};\n\nconst openPrompt = (title, text, subjectOptional) => {\n  return {\n    type: actionTypes.OPEN_PROMPT,\n    title,\n    text,\n    subjectOptional\n  };\n};\n\nconst loggedIn = () => {\n  return {\n    type: actionTypes.LOGGED_IN\n  };\n};\n\nconst updateToken = token => {\n  return {\n    type: actionTypes.UPDATE_TOKEN,\n    token\n  };\n};\n\nconst logIn = (email, password) => async dispatch => {\n  dispatch(loading());\n\n  try {\n    const user = await axios.post('/login', {\n      email: email,\n      password: password\n    });\n    console.log(user);\n    await dispatch(updateUsername(user.data));\n    await dispatch(loggedIn());\n  } catch (error) {\n    dispatch(openPrompt('תקלה', error.response.data));\n  } finally {\n    dispatch(finishedLoading());\n  }\n};\n\nconst register = (email, password) => async dispatch => {\n  dispatch(loading());\n\n  try {\n    const user = await axios.post('/register', {\n      email: email,\n      password: password\n    });\n    await dispatch(updateUsername(user.data));\n    await dispatch(loggedIn());\n  } catch (error) {\n    dispatch(openPrompt('תקלה', error.response.data));\n  } finally {\n    dispatch(finishedLoading());\n  }\n};\n\nexport { updateUsername, loggedIn, logIn, register, updateWifiDetails, updateSettings, updateToken };","map":{"version":3,"sources":["C:/Users/avivk/Documents/GitHub/scanlyreal/client/src/Store/Actions/mainActions.js"],"names":["actionTypes","axios","setCurrentUser","getCurrentUser","loading","finishedLoading","updateWifiDetails","username","password","dispatch","user","post","email","wifiUsername","wifiPassword","updateUsername","data","error","openPrompt","response","updateSettings","shufersalUsername","shufersalPassword","ramiLevyUsername","ramiLevyPassword","selection","sound","console","log","updateToken","token","type","UPDATE_USERNAME","payload","title","text","subjectOptional","OPEN_PROMPT","loggedIn","LOGGED_IN","UPDATE_TOKEN","logIn","register"],"mappings":"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","sourcesContent":["import { actionTypes } from '../actionTypes'\r\nimport axios from '../../Axios/config'\r\nimport { setCurrentUser,getCurrentUser } from '../../UtilityFunctions/functions'\r\nimport { loading, finishedLoading } from './loadingActions'\r\n\r\nconst updateWifiDetails = (username, password) => async dispatch => {\r\n    dispatch(loading());\r\n    try{\r\n        const user = await axios.post('/wifi',{email:getCurrentUser().email,wifiUsername: username,wifiPassword: password })\r\n        dispatch(updateUsername(user.data));\r\n    }\r\n    catch(error){\r\n        dispatch(openPrompt('תקלה', error.response.data))\r\n    }\r\n    finally{\r\n        dispatch(finishedLoading());\r\n    }\r\n}\r\n\r\nconst updateSettings = (shufersalUsername,shufersalPassword,ramiLevyUsername,ramiLevyPassword,selection,sound) => async dispatch => {\r\n    dispatch(loading());\r\n    try{\r\n        const user = await axios.post('/settings',\r\n        {email:getCurrentUser().email,\r\n            shufersalUsername,\r\n            shufersalPassword,\r\n            ramiLevyUsername,\r\n            ramiLevyPassword,\r\n            selection,\r\n            sound\r\n         })\r\n        await dispatch(updateUsername(user.data));\r\n        console.log(user.data)\r\n\r\n        dispatch(openPrompt('נשמר','כל המידע נשמר'))\r\n    }\r\n    catch(error){\r\n        dispatch(openPrompt('תקלה', error.response.data))\r\n    }\r\n    finally{\r\n        dispatch(finishedLoading());\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nconst updateUsername = (user) => dispatch => {\r\n    setCurrentUser(user);\r\n    dispatch(updateToken(user.token))\r\n    return {\r\n        type: actionTypes.UPDATE_USERNAME,\r\n        payload: user\r\n    }\r\n}\r\n\r\nconst openPrompt = (title, text, subjectOptional) => {\r\n    return {\r\n        type: actionTypes.OPEN_PROMPT,\r\n        title,\r\n        text,\r\n        subjectOptional\r\n    }\r\n}\r\n\r\n\r\nconst loggedIn = () => {\r\n    return {\r\n        type: actionTypes.LOGGED_IN\r\n    }\r\n}\r\n\r\nconst updateToken = (token) => {\r\n    return {\r\n        type: actionTypes.UPDATE_TOKEN,\r\n        token,\r\n    }\r\n}\r\n\r\nconst logIn = (email, password) => async dispatch => {\r\n    dispatch(loading());\r\n    try {\r\n        const user = await axios.post('/login', { email: email, password: password })\r\n        console.log(user)\r\n        await dispatch(updateUsername(user.data));\r\n        await dispatch(loggedIn());\r\n    }\r\n    catch (error) {\r\n        dispatch(openPrompt('תקלה', error.response.data))\r\n    }\r\n    finally {\r\n        dispatch(finishedLoading());\r\n    }\r\n}\r\n\r\nconst register = (email, password) => async dispatch => {\r\n    dispatch(loading());\r\n    try {\r\n        const user = await axios.post('/register', { email: email, password: password })\r\n        await dispatch(updateUsername(user.data));\r\n        await dispatch(loggedIn());\r\n    }\r\n    catch (error) {\r\n        dispatch(openPrompt('תקלה', error.response.data))\r\n    }\r\n    finally {\r\n        dispatch(finishedLoading());\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport {\r\n    updateUsername,\r\n    loggedIn,\r\n    logIn,\r\n    register,\r\n    updateWifiDetails,\r\n    updateSettings,\r\n    updateToken\r\n}\r\n"]},"metadata":{},"sourceType":"module"}