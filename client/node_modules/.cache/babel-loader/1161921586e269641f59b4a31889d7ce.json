{"ast":null,"code":"import axios from 'axios';\nimport { URL } from '../Constants/const';\naxios.defaults.baseURL = URL;\nconst token = JSON.parse(localStorage.getItem('token'));\naxios.defaults.headers.common['auth-token'] = token;\naxios.defaults.headers.post['Content-Type'] = 'application/json';\naxios.interceptors.request.use(config => {\n  let token = JSON.parse(localStorage.getItem('token'));\n\n  if (!config.headers.common['auth-token']) {\n    if (token) {\n      config.headers.common['auth-token'] = token;\n    }\n  }\n\n  return config;\n}, error => Promise.reject(error));\nexport default axios;","map":{"version":3,"sources":["C:/Users/avivk/Documents/GitHub/scanlyreal/client/src/Axios/config.js"],"names":["axios","URL","defaults","baseURL","token","JSON","parse","localStorage","getItem","headers","common","post","interceptors","request","use","config","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,GAAR,QAAkB,oBAAlB;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyBF,GAAzB;AACA,MAAMG,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAd;AACAR,KAAK,CAACE,QAAN,CAAeO,OAAf,CAAuBC,MAAvB,CAA8B,YAA9B,IAA8CN,KAA9C;AACAJ,KAAK,CAACE,QAAN,CAAeO,OAAf,CAAuBE,IAAvB,CAA4B,cAA5B,IAA8C,kBAA9C;AAGAX,KAAK,CAACY,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACIC,MAAM,IAAI;AACN,MAAIX,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;;AACA,MAAI,CAACO,MAAM,CAACN,OAAP,CAAeC,MAAf,CAAsB,YAAtB,CAAL,EAA0C;AAC1C,QAAIN,KAAJ,EAAW;AACTW,MAAAA,MAAM,CAACN,OAAP,CAAeC,MAAf,CAAsB,YAAtB,IAAsCN,KAAtC;AACD;AACF;;AAED,SAAOW,MAAP;AACD,CAVL,EAWIC,KAAK,IAAIC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAXb;AAcA,eAAehB,KAAf","sourcesContent":["import axios from 'axios'\r\nimport {URL} from '../Constants/const' \r\n\r\naxios.defaults.baseURL = URL;\r\nconst token = JSON.parse(localStorage.getItem('token'));\r\naxios.defaults.headers.common['auth-token'] = token;\r\naxios.defaults.headers.post['Content-Type'] = 'application/json';\r\n\r\n\r\naxios.interceptors.request.use(\r\n    config => {\r\n        let token = JSON.parse(localStorage.getItem('token'));\r\n        if (!config.headers.common['auth-token']) {\r\n        if (token) {\r\n          config.headers.common['auth-token'] = token;\r\n        }\r\n      }\r\n  \r\n      return config;\r\n    },\r\n    error => Promise.reject(error)\r\n  );\r\n\r\nexport default axios;"]},"metadata":{},"sourceType":"module"}