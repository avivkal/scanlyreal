[{"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\App.js":"1","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\index.js":"2","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Constants\\const.js":"3","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\NavigationBar\\NavigationBar.js":"4","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Login\\Login.js":"5","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Dashboard\\Dashboard.js":"6","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Wifi\\Wifi.js":"7","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardFilters\\DashboardFilters.js":"8","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\loadingReducer.js":"9","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\loadingActions.js":"10","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\UtilityFunctions\\functions.js":"11","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\actionTypes.js":"12","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\promptReducer.js":"13","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\mainActions.js":"14","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\store.js":"15","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\ErrorBoundary\\ErrorBoundary.js":"16","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\mainReducer.js":"17","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Register\\Register.js":"18","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Settings\\Settings.js":"19","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\promptActions.js":"20","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Prompt\\Prompt.js":"21","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Axios\\config.js":"22","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\AdminLogin\\AdminLogin.js":"23","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\AdminDashboard\\AdminDashboard.js":"24","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Assets\\StatisticsCard.js":"25","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Assets\\DispatchedOrders.js":"26","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardComparison\\DashboardComparison.js":"27","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\FAQ\\Faq.js":"28","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\FAQ\\FaqQuestions.js":"29","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Home\\Home.js":"30","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Assets\\SliderDefault.js":"31","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Assets\\H1CtaSection.js":"32"},{"size":2782,"mtime":1610637023349,"results":"33","hashOfConfig":"34"},{"size":728,"mtime":1608406384540,"results":"35","hashOfConfig":"34"},{"size":637,"mtime":1610636949037,"results":"36","hashOfConfig":"34"},{"size":3445,"mtime":1610477566871,"results":"37","hashOfConfig":"34"},{"size":2430,"mtime":1610205698450,"results":"38","hashOfConfig":"34"},{"size":12443,"mtime":1610380395965,"results":"39","hashOfConfig":"34"},{"size":5099,"mtime":1609416360322,"results":"40","hashOfConfig":"34"},{"size":6958,"mtime":1610209265888,"results":"41","hashOfConfig":"34"},{"size":479,"mtime":1607030800783,"results":"42","hashOfConfig":"34"},{"size":285,"mtime":1607030791248,"results":"43","hashOfConfig":"34"},{"size":1105,"mtime":1608487378985,"results":"44","hashOfConfig":"34"},{"size":271,"mtime":1608149789469,"results":"45","hashOfConfig":"34"},{"size":1655,"mtime":1607026048286,"results":"46","hashOfConfig":"34"},{"size":4694,"mtime":1609276819323,"results":"47","hashOfConfig":"34"},{"size":466,"mtime":1607026054680,"results":"48","hashOfConfig":"34"},{"size":535,"mtime":1607030732492,"results":"49","hashOfConfig":"34"},{"size":673,"mtime":1608150735156,"results":"50","hashOfConfig":"34"},{"size":8269,"mtime":1610456520123,"results":"51","hashOfConfig":"34"},{"size":7131,"mtime":1608484209947,"results":"52","hashOfConfig":"34"},{"size":453,"mtime":1608148768074,"results":"53","hashOfConfig":"34"},{"size":1449,"mtime":1607553690894,"results":"54","hashOfConfig":"34"},{"size":674,"mtime":1609712418889,"results":"55","hashOfConfig":"34"},{"size":2203,"mtime":1609167201384,"results":"56","hashOfConfig":"34"},{"size":17373,"mtime":1610380389061,"results":"57","hashOfConfig":"34"},{"size":1707,"mtime":1609682766881,"results":"58","hashOfConfig":"34"},{"size":10606,"mtime":1610202408157,"results":"59","hashOfConfig":"34"},{"size":9630,"mtime":1610380401173,"results":"60","hashOfConfig":"34"},{"size":1845,"mtime":1610471179841,"results":"61","hashOfConfig":"34"},{"size":14575,"mtime":1610477439093,"results":"62","hashOfConfig":"34"},{"size":447,"mtime":1610637939046,"results":"63","hashOfConfig":"34"},{"size":6605,"mtime":1610647325367,"results":"64","hashOfConfig":"34"},{"size":1287,"mtime":1610647298923,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"1wiime4",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"103"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"85"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"69"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"78"},"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\App.js",["150"],"import React, { Suspense } from 'react';\nimport {Col} from 'react-bootstrap'\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport NavigationBar from './Components/NavigationBar/NavigationBar'\nimport { FAQ_PATH,SETTINGS_PATH,DASHBOARD_COMPARISON_PATH,HOME_PAGE_PATH, LOGIN_PATH,DASHBOARD_FILTERS_PATH, REGISTER_PATH,DASHBOARD_NOT_ADDED_PATH, DASHBOARD_PATH, WIFI_SETUP_PATH, ADMIN_LOGIN_PATH, ADMIN_PATH } from './Constants/const'\nimport './App.scss';\nimport Prompt from './Components/Prompt/Prompt'\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport \"react-perfect-scrollbar/dist/css/styles.css\"\n// import \"prismjs/themes/prism-tomorrow.css\"\n\nconst Login = React.lazy(() => import('./Components/Login/Login'));\nconst Register = React.lazy(() => import('./Components/Register/Register'));\nconst Dashboard = React.lazy(() => import('./Components/Dashboard/Dashboard'));\nconst Settings = React.lazy(() => import('./Components/Settings/Settings'));\nconst Wifi = React.lazy(() => import('./Components/Wifi/Wifi'));\nconst DashboardComparison = React.lazy(() => import('./Components/DashboardComparison/DashboardComparison'));\nconst DashboardFilters = React.lazy(() => import('./Components/DashboardFilters/DashboardFilters'));\nconst AdminLogin = React.lazy(() => import('./Components/AdminLogin/AdminLogin'));\nconst AdminDashboard = React.lazy(() => import('./Components/AdminDashboard/AdminDashboard'));\nconst Faq = React.lazy(() => import('./Components/FAQ/Faq'));\nconst Home = React.lazy(() => import('./Components/Home/Home'));\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <NavigationBar />\n        <Suspense fallback={<Col xs={12} className=\"d-flex justify-content-center spinner-style\"><CircularProgress /></Col>}>\n          <Prompt />\n          <Switch>\n          <Route path={DASHBOARD_PATH} exact component={Dashboard} />\n            <Route path={LOGIN_PATH} exact component={Login} />\n            <Route path={REGISTER_PATH} exact component={Register} />\n            <Route path={SETTINGS_PATH} exact component={Settings} />\n            <Route path={WIFI_SETUP_PATH} exact component={Wifi} />\n            <Route path={DASHBOARD_COMPARISON_PATH} exact component={DashboardComparison} />\n            <Route path={DASHBOARD_FILTERS_PATH} exact component={DashboardFilters} />\n            <Route path={ADMIN_LOGIN_PATH} exact component={AdminLogin} />\n            <Route path={ADMIN_PATH} exact component={AdminDashboard} />\n            <Route path={FAQ_PATH} exact component={Faq} />\n            <Route path={HOME_PAGE_PATH} exact component={Home} />\n          </Switch>\n        </Suspense>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n",["151","152"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\index.js",[],["153","154"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Constants\\const.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\NavigationBar\\NavigationBar.js",["155","156","157","158"],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport {useSelector} from 'react-redux'\r\nimport { Navbar, Nav, Button } from 'react-bootstrap';\r\nimport { DASHBOARD_PATH,FAQ_PATH,DASHBOARD_COMPARISON_PATH,REGISTER_PATH,HOME_PAGE_PATH,LOGIN_PATH, WIFI_SETUP_PATH, DASHBOARD_NOT_ADDED_PATH,DASHBOARD_FILTERS_PATH, SETTINGS_PATH } from '../../Constants/const'\r\nimport './navigationBar.scss'\r\nconst NavigationBar = () => {\r\n    // state = {\r\n    //     show: false\r\n    // } \r\n    // showDropdown = (e)=>{\r\n    //     this.setState({show:true});\r\n    // }\r\n    // hideDropdown = e => {\r\n    //     this.setState({show:false});\r\n    // }\r\n\r\n    const token = useSelector(state => state.main.token)\r\n    const logOutHandler = () => {\r\n        localStorage.removeItem('currentUser');\r\n        localStorage.removeItem('token');\r\n        window.location.reload();\r\n    }\r\n\r\n        return (\r\n\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" >\r\n                <Navbar.Brand as={Link} to={DASHBOARD_PATH}>Scanly</Navbar.Brand>\r\n\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    {/* {console.log(localStorage.getItem('admin'))}\r\n                    {localStorage.getItem('admin') && <Nav className=\"ml-auto align\"> <Nav.Link as={Link} to={WIFI_SETUP_PATH}>Wifi הגדרת</Nav.Link>\r\n                            <Nav.Link as={Link} to={DASHBOARD_FILTERS_PATH}>admin</Nav.Link>\r\n                            <Nav.Link as={Link} to={DASHBOARD_NOT_ADDED_PATH}>מוצרים שלא נוספו</Nav.Link></Nav>} */}\r\n                   \r\n                      {(localStorage.getItem('currentUser') !== null || (token !== undefined && token !== null && token !== '')) ? <Nav className=\"ml-auto align\"> <Nav.Link as={Link} to={SETTINGS_PATH}>\r\n                            הגדרות </Nav.Link>\r\n                            <Nav.Link as={Link} to={FAQ_PATH}>שאלות תשובות</Nav.Link>\r\n                            <Nav.Link as={Link} to={DASHBOARD_FILTERS_PATH}>נתוני צריכה</Nav.Link>\r\n\r\n                        <Nav.Link as={Link} to={DASHBOARD_COMPARISON_PATH}>השוואת מחירים</Nav.Link>                     \r\n                        <Nav.Link as={Link} to={DASHBOARD_PATH}>היסטוריית מוצרים</Nav.Link> <Button onClick={logOutHandler} variant=\"danger\">התנתקות מהחשבון</Button></Nav> : <Nav className=\"ml-auto align\">                            \r\n                            <Nav.Link as={Link} to={LOGIN_PATH}>התחברות למשתמש קיים</Nav.Link>\r\n                            <Nav.Link as={Link} to={REGISTER_PATH}>יצירת משתמש חדש</Nav.Link>\r\n\r\n</Nav>}  \r\n                        {/* <NavDropdown title=\"המוצרים שלי\" id=\"collasible-nav-dropdown\" show={this.state.show}\r\n   onMouseEnter={this.showDropdown} \r\n   onMouseLeave={this.hideDropdown}>\r\n        <NavDropdown.Item as={Link} to={DASHBOARD_FILTERS_PATH}>נתוני צריכה</NavDropdown.Item>\r\n        <NavDropdown.Item as={Link} to={DASHBOARD_NOT_ADDED_PATH}>מוצרים שלא נוספו</NavDropdown.Item>\r\n        <NavDropdown.Item as={Link} to={DASHBOARD_PATH}>מוצרים</NavDropdown.Item>\r\n      </NavDropdown> */}\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    \r\n}\r\n\r\n\r\nexport default NavigationBar;\r\n\r\n",["159","160"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Login\\Login.js",["161"],"import React, { Component } from 'react'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Button, Container,Col,Row } from 'react-bootstrap';\r\nimport './login.scss'\r\nimport { DASHBOARD_PATH, REGISTER_PATH } from '../../Constants/const'\r\nclass Login extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await this.props.logIn(this.state.email, this.state.password);\r\n    if (this.props.loggedIn) {\r\n      this.props.history.push(DASHBOARD_PATH);\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"form app-background\">\r\n        <Col xs={12} lg={{ span: 6, offset: 3 }} className=\"form-style\">\r\n        <h2 style={{textAlign:\"center\"}}>התחברות למשתמש קיים</h2>\r\n\r\n        <Form onSubmit={(e) => this.handleSubmit(e)} style={{textAlign:\"right\"}} >\r\n        <Col className=\"top\">\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            {/* <Form.Label>דואר אלקטרוני</Form.Label> */}\r\n            <Form.Control type=\"email\" placeholder=\"הכנס דואר אלקטרוני\" name=\"email\" onChange={(e) => this.handleChange(e)} />\r\n\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            {/* <Form.Label>סיסמה</Form.Label> */}\r\n            <Form.Control type=\"password\" placeholder=\"הכנס סיסמה\" name=\"password\" onChange={(e) => this.handleChange(e)} />\r\n          </Form.Group>\r\n          \r\n          \r\n          <Button className=\"btn-block mr-1 mt-1\" variant=\"primary\" type=\"submit\">\r\n            התחבר\r\n  </Button>\r\n          <p className=\"top-p\"> עדיין אין לך חשבון? לחץ<span onClick={() => this.props.history.push(REGISTER_PATH)} className=\"register-link\"> כאן </span> על מנת ליצור אחד</p>\r\n          </Col>\r\n\r\n        </Form>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.main.currentUser,\r\n    loggedIn: state.main.loggedIn\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logIn: (email, password) => dispatch(mainActions.logIn(email, password))\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Dashboard\\Dashboard.js",["162","163","164"],"import React,{Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport * as promptActions from '../../Store/Actions/promptActions'\r\nimport * as loadingActions from '../../Store/Actions/loadingActions'\r\nimport { LOGIN_PATH } from '../../Constants/const';\r\nimport { getCurrentUser } from '../../UtilityFunctions/functions';\r\nimport { Container,Dropdown,Spinner,Col } from 'react-bootstrap';\r\nimport axios from '../../Axios/config'\r\nimport './dashboard.scss'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {Table} from \"reactstrap\"\r\nimport \"../../Assets/scss/pages/dashboard-analytics.scss\"\r\nimport \"../../Assets/scss/bootstrap-extended/_tables.scss\"\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        products: [],\r\n        // productsNotAdded: [],\r\n        shufersalTotal: 0,\r\n        ramiLevyTotal: 0,\r\n        image: '',\r\n        days: 30,\r\n        shufersalTotalNotComparison:0,\r\n        ramiLevyTotalNotComparison: 0\r\n        }\r\n\r\n    componentDidMount = async () => {\r\n        if (!this.props.loggedIn) {\r\n            if (getCurrentUser()) {\r\n                this.props.setLoggedIn()\r\n                this.loadData(this.state.days)\r\n            }\r\n            else {\r\n                this.props.history.push(LOGIN_PATH)\r\n            }\r\n        }\r\n        else{\r\n            this.loadData(this.state.days)\r\n        }\r\n    }\r\n    loadData = async (days) => {\r\n        this.props.load()\r\n        const shufersalTotalPrice = await axios.post('/products/total', {email:getCurrentUser().email,number:days,isShufersal: true})\r\n        const ramiLevyTotalPrice = await axios.post('/products/total', {email:getCurrentUser().email,number:days,isShufersal: false})\r\n        const filteredShufersal = shufersalTotalPrice.data.filter(current => current._id.selection === \"shufersalPrice\")\r\n        const filteredRamiLevy = ramiLevyTotalPrice.data.filter(current => current._id.selection === \"ramiLevyPrice\")\r\n        if(filteredShufersal.length > 0 && filteredRamiLevy.length >0){\r\n          this.setState({shufersalTotalNotComparison: filteredShufersal[0].price})\r\n          this.setState({ramiLevyTotalNotComparison: filteredRamiLevy[0].price})  \r\n        }\r\n        axios.post('/products/', {email: getCurrentUser().email,number:days}).then(data => {\r\n            this.setState({products: data.data});\r\n            let y = 0, m = 0;\r\n            for(let x in data.data){\r\n                if(data.data[x].shufersalPrice!=='לא נמצא' && data.data[x].ramiLevyPrice!=='לא נמצא'){\r\n                    y += data.data[x].shufersalPrice;\r\n                    m += data.data[x].ramiLevyPrice;\r\n                }\r\n            }\r\n            this.setState({shufersalTotal: y})\r\n            this.setState({ramiLevyTotal: m})\r\n            this.props.finishedLoading()\r\n    })\r\n        // axios.get('/products/notAdded/' + getCurrentUser().email).then(data => {\r\n        //     this.setState({productsNotAdded: data.data})\r\n\r\n        //   })\r\n    }\r\n\r\n    handleDropdownChange = async (days) => {\r\n        this.setState({days:days})\r\n        this.loadData(days)\r\n    }\r\n\r\n    render(){\r\n        if(this.props.loading)\r\n            return <Col xs={12} className=\"d-flex justify-content-center spinner-style\"><CircularProgress /></Col>\r\n        if(this.state.products === null || this.state.products === undefined || this.state.products.length === 0)\r\n            return <Container>\r\n            <h1 style={{textAlign:\"right\"}}>היסטוריית מוצרים</h1>\r\n            <h1 className=\"table-style-image margin-top-container\">לא נסרקו עדיין מוצרים</h1>\r\n            </Container>\r\n            \r\n        return(\r\n            <Container className=\"margin-top-container\">\r\n            <h1 className=\"align-right\">היסטוריית מוצרים</h1>\r\n            <Dropdown>\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  לפי    {this.state.days} ימים אחרונים\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(7)}>לפי 7 ימים אחרונים</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(30)}>לפי 30 ימים אחרונים </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(365)}>לפי 365 ימים אחרונים</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    {/* <p className=\"align-right\">לאיזו עגלה המוצר נכנס = 🛒</p> */}\r\n\r\n\r\n     \r\n        <Table\r\n          bordered hover\r\n          className=\"dashboard-table table-hover-animation mb-0 mt-1 style-center\"\r\n        >\r\n          <thead>\r\n          <tr className=\"table-header\">\r\n      <th className=\"table-style-image\">מחיר</th>\r\n      <th className=\"table-style-image\">תמונה</th>\r\n      <th>שם מוצר</th>\r\n      <th className=\"d-none d-lg-table-cell\">תאריך</th>\r\n\r\n    </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n\r\n          {this.state.products.map((current) => {\r\n          const date = new Date(current.creationDate);\r\n          const newDate = date.toLocaleDateString('he-IS');\r\n          const nameToshow = current.name !== '' ? current.name : `${current.barcode} :מוצר לא נמצא, ברקוד`\r\n        //   const greater = current.shufersalPrice < current.ramiLevyPrice ? 'shufersal' : 'ramiLevy'\r\n          //greater === 'shufersal' ? 'red-style' : 'green-style'\r\n          // const isSelectionShufersal = current.selection === 'Shufersal';\r\n          const priceGeneral = current.selection === 'Shufersal' ? current.shufersalPrice : current.ramiLevyPrice;\r\n          // const difference = (Math.round((current.shufersalPrice-current.ramiLevyPrice) * 100) / 100).toFixed(2);\r\n          // let message = ''\r\n          // if(isSelectionShufersal){\r\n          //   if(difference>0){\r\n          //       message = `₪ ${Math.abs(difference)} ניתן לחסוך ברמי לוי`\r\n          //   }\r\n            \r\n          // }\r\n          // else{\r\n          //   if(difference<0){\r\n          //       message = `₪ ${Math.abs(difference)} ניתן לחסוך בשופרסל`\r\n          //   }\r\n            \r\n          // }\r\n              return <tr key={current._id}>\r\n              {/* <td className='table-style-image'>{message} </td> */}\r\n              <td>{priceGeneral} {priceGeneral !== 'לא נמצא' && '₪'} </td>\r\n              {/* <td className={(!isSelectionShufersal && 'gray-style') + ' table-style-image'}>{current.shufersalPrice} {current.shufersalPrice !=='לא נמצא' && '₪'} {isSelectionShufersal && <div>🛒</div>}</td>\r\n          <td className={(isSelectionShufersal && 'gray-style') + ' table-style-image'}>{current.ramiLevyPrice} {current.ramiLevyPrice !=='לא נמצא' && '₪'} {!isSelectionShufersal && <div>🛒</div>}</td> */}\r\n              <td className=\"table-style-image\"><img height=\"50px\" src={current.image}/></td>\r\n              <td>{nameToshow}</td>\r\n              <td className=\"d-none d-lg-table-cell\">{newDate}</td>\r\n            </tr>\r\n            \r\n          \r\n                      \r\n      })}\r\n        \r\n          </tbody>\r\n        </Table>\r\n\r\n\r\n                                {/* <Table bordered hover className=\"table-style\">\r\n  <thead>\r\n    <tr className=\"table-header\">\r\n      <th className=\"table-style-image\">ניתן לחסוך</th>\r\n      <th className=\"table-style-image\">שופרסל</th>\r\n      <th className=\"table-style-image\">רמי לוי</th>\r\n      <th className=\"table-style-image\">תמונה</th>\r\n      <th>שם מוצר</th>\r\n      <th className=\"d-none d-lg-table-cell\">תאריך</th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.products.map((current) => {\r\n          const date = new Date(current.creationDate);\r\n          const newDate = date.toLocaleDateString('he-IS');\r\n        //   const greater = current.shufersalPrice < current.ramiLevyPrice ? 'shufersal' : 'ramiLevy'\r\n          //greater === 'shufersal' ? 'red-style' : 'green-style'\r\n          const isSelectionShufersal = current.selection === 'Shufersal' ? true : false;\r\n          const difference = (Math.round((current.shufersalPrice-current.ramiLevyPrice) * 100) / 100).toFixed(2);\r\n          let message = ''\r\n          if(isSelectionShufersal){\r\n            if(difference>0){\r\n                message = `₪ ${Math.abs(difference)} ניתן לחסוך ברמי לוי`\r\n            }\r\n            \r\n          }\r\n          else{\r\n            if(difference<0){\r\n                message = `₪ ${Math.abs(difference)} ניתן לחסוך בשופרסל`\r\n            }\r\n            \r\n          }\r\n          return <tr key={current._id}>\r\n          <td className='table-style-image'>{message} </td>\r\n          <td className={(!isSelectionShufersal && 'gray-style') + ' table-style-image'}>{current.shufersalPrice} {current.shufersalPrice !=='לא נמצא' && '₪'} {isSelectionShufersal && <div>🛒</div>}</td>\r\n      <td className={(isSelectionShufersal && 'gray-style') + ' table-style-image'}>{current.ramiLevyPrice} {current.ramiLevyPrice !=='לא נמצא' && '₪'} {!isSelectionShufersal && <div>🛒</div>}</td>\r\n          <td className=\"table-style-image\"><img height=\"50px\" src={current.image}/></td>\r\n          <td>{current.name}</td>\r\n          <td className=\"d-none d-lg-table-cell\">{newDate}</td>\r\n\r\n        </tr>\r\n                      \r\n      })}\r\n        <tr key='totalPrice' style={{borderTop: \"2px solid black\"}}>\r\n          <td></td>\r\n          <td>{((Math.round(this.state.shufersalTotalNotComparison * 100) / 100).toFixed(2))}₪</td>\r\n          <td>{((Math.round(this.state.ramiLevyTotalNotComparison * 100) / 100).toFixed(2))}₪</td>\r\n          <td>מחיר כולל לפי סל</td>\r\n        </tr>\r\n\r\n        \r\n  </tbody>\r\n</Table> */}\r\n{/* \r\n<Table bordered hover className=\"table-style-image table-style\">\r\n  <thead>\r\n    <tr className=\"table-header\">\r\n      <th>ניתן לחסוך</th>\r\n      <th>שופרסל</th>\r\n      <th>רמי לוי</th>\r\n      <th></th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n\r\n\r\n<tr key='totalComparison'>\r\n    <td>{Math.abs((Math.round(((this.state.ramiLevyTotal-this.state.shufersalTotal)) * 100) / 100).toFixed(2))} ₪ :הפרש מחיר בין הסלים</td>\r\n\r\n          <td className={this.state.shufersalTotal < this.state.ramiLevyTotal ? 'green-style' : 'red-style'}>{(Math.round(this.state.shufersalTotal * 100) / 100).toFixed(2)} ₪</td>\r\n          <td className={this.state.shufersalTotal > this.state.ramiLevyTotal ? 'green-style' : 'red-style'}>{(Math.round(this.state.ramiLevyTotal * 100) / 100).toFixed(2)} ₪</td>\r\n          <td> השוואת סלים בין מוצרים זהים</td>\r\n        </tr>\r\n</tbody>\r\n\r\n</Table>     */}\r\n{/* <h1 style={{textAlign:\"right\"}}>מוצרים שלא נכנסו לעגלה</h1>\r\n<Table striped bordered hover variant=\"dark\" className=\"table-style\">\r\n  <thead>\r\n    <tr>\r\n      <th>תמונה</th>\r\n      <th>שם מוצר</th>\r\n      <th>תאריך</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.productsNotAdded.map(current => {\r\n                    const date = new Date(current.creationDate);\r\n                    const newDate = date.toLocaleDateString('he-IS');          \r\n          return <tr key={current._id}>\r\n                        <td><img height=\"50px\" src={current.image}/></td>\r\n          <td>{current.name}</td>\r\n          <td>{newDate}</td>\r\n\r\n        </tr>\r\n      })}\r\n    \r\n  </tbody>\r\n</Table> */}\r\n\r\n\r\n</Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.main.currentUser,\r\n        loggedIn: state.main.loggedIn,\r\n        loading: state.loading.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCurrentUser: (user) => dispatch(mainActions.updateUsername(user)),\r\n        setLoggedIn: () => dispatch(mainActions.loggedIn()),\r\n        load: () => dispatch(loadingActions.loading()),\r\n        finishedLoading: () => dispatch(loadingActions.finishedLoading()),\r\n        logIn: (email, password) => dispatch(mainActions.logIn(email, password))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);",["165","166"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Wifi\\Wifi.js",["167","168"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport * as promptActions from '../../Store/Actions/promptActions'\r\nimport * as loadingActions from '../../Store/Actions/loadingActions'\r\nimport { LOGIN_PATH } from '../../Constants/const';\r\nimport { getCurrentUser } from '../../UtilityFunctions/functions';\r\nimport { Form, Button, Container, Spinner,Row,Col } from 'react-bootstrap';\r\nimport axios from '../../Axios/config'\r\nimport Barcode from 'react-barcode'\r\nimport './wifi.scss'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nclass Wifi extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        submitUsername: false,\r\n        submitPassword: false,\r\n    }\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.updateWifiDetails(this.state.username, this.state.password);\r\n        this.setState({ submitUsername: true })\r\n        // axios.post('/wifi',{email:getCurrentUser().email,wifiUsername: this.state.username,wifiPassword: this.state.password }).then(data => console.log(data))\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (!this.props.loggedIn) {\r\n            if (getCurrentUser()) {\r\n                this.props.updateCurrentUser(getCurrentUser())\r\n                this.props.setLoggedIn()\r\n            }\r\n            else {\r\n                this.props.history.push(LOGIN_PATH)\r\n            }\r\n        }\r\n        // if(getCurrentUser() && getCurrentUser().wifiUsername){\r\n        //     this.setState({\r\n        //         username: getCurrentUser().wifiUsername,\r\n        //         password: getCurrentUser().wifiPassword,\r\n        //     })\r\n        // }\r\n        \r\n\r\n    }\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            return <Col xs={12} className=\"d-flex justify-content-center spinner-style\"><CircularProgress /></Col>\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                {!(this.state.submitUsername || this.state.submitPassword) && <Form onSubmit={this.onSubmit} className=\"form-style-wifi\">\r\n                    <Col xs={12} lg={6} className=\"float-right\">\r\n                    <Form.Group controlId=\"formBasicEmail\" className=\"align-right\">\r\n                        <Form.Label>הביתית Wifiשם רשת ה </Form.Label>\r\n                        <Form.Control name=\"username\" type=\"text\" placeholder=\"Enter Wifi Username\" onChange={(e) => this.onChange(e)} value={this.state.username} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\" className=\"align-right\">\r\n                    <Form.Label>Wifiסיסמה ל</Form.Label>\r\n                        <Form.Control name=\"password\" type=\"password\" placeholder=\"Enter Wifi Password\" onChange={(e) => this.onChange(e)} value={this.state.password} />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        המשך\r\n  </Button>\r\n  </Col>\r\n                </Form>}\r\n                \r\n                {this.state.submitUsername && <Container> <Row className=\"center-style\"> <Col md={{ span: 6, offset: 3 }} style={{marginTop:\"15px\"}}\r\n><Barcode style={{marginTop:\"15px\"}} value={this.state.username} /></Col> </Row>\r\n                  <Row style={{marginTop:\"15px\"}}> <Col md={{ span: 6, offset: 3 }} className=\"center-style\"><Button variant=\"primary\" onClick={()=>this.setState({submitPassword: true, submitUsername: false})}>\r\n                        המשך\r\n  </Button></Col> </Row></Container>}\r\n                {this.state.submitPassword && <Container> <Row className=\"center-style\"> <Col md={{ span: 6, offset: 3 }} style={{marginTop:\"15px\"}}\r\n><Barcode value={this.state.password} /></Col> </Row>\r\n                  <Row style={{marginTop:\"15px\"}}> <Col md={{ span: 6, offset: 3 }} className=\"center-style\"><Button variant=\"primary\" onClick={()=>this.setState({submitPassword: false, submitUsername: false})}>\r\n                        סיום\r\n  </Button></Col> </Row></Container>}\r\n\r\n\r\n               \r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.main.currentUser,\r\n        loggedIn: state.main.loggedIn,\r\n        loading: state.loading.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCurrentUser: (user) => dispatch(mainActions.updateUsername(user)),\r\n        setLoggedIn: () => dispatch(mainActions.loggedIn()),\r\n        updateWifiDetails: (username, password) => dispatch(mainActions.updateWifiDetails(username, password)),\r\n        openPrompt: (title, text) => dispatch(promptActions.openPrompt(title, text)),\r\n        load: () => dispatch(loadingActions.loading()),\r\n        finishedLoading: () => dispatch(loadingActions.finishedLoading()),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Wifi);","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardFilters\\DashboardFilters.js",["169","170"],"import React,{Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport * as loadingActions from '../../Store/Actions/loadingActions'\r\nimport { LOGIN_PATH } from '../../Constants/const';\r\nimport { getCurrentUser } from '../../UtilityFunctions/functions';\r\nimport { Container,Dropdown,Spinner,Row,Col } from 'react-bootstrap';\r\nimport axios from '../../Axios/config'\r\nimport './dashboardFilters.scss'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {Table} from \"reactstrap\"\r\nimport \"../../Assets/scss/pages/dashboard-analytics.scss\"\r\nimport \"../../Assets/scss/bootstrap-extended/_tables.scss\"\r\nclass DashboardFilters extends Component {\r\n    state = {\r\n        products: [],\r\n        days: 30,\r\n        totalPriceLocal: 0,\r\n        filter:'price'\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        // axios.get('https://chp.co.il/autocompletion/product_extended?term=8717163647226').then(data=> console.log(data.data[0].value))\r\n        if (!this.props.loggedIn) {\r\n            if (getCurrentUser()) {\r\n                this.props.setLoggedIn()\r\n                this.loadData(this.state.days)\r\n            }\r\n            else {\r\n                this.props.history.push(LOGIN_PATH)\r\n            }\r\n        }\r\n        else{\r\n            this.loadData(this.state.days)\r\n        }\r\n    }\r\n    loadData = (days,filter) => {\r\n        this.props.load()\r\n        const isShufersal = this.props.currentUser.selection === 'Shufersal' ? true : false;\r\n        axios.post('/products/agg',{email:getCurrentUser().email,number:days, isShufersal:isShufersal,filter:filter}).then(data=>{\r\n            this.setState({products:data.data})\r\n            let x = 0;\r\n            for(let i = 0; i<data.data.length; i++){\r\n                x+= data.data[i].price;\r\n            }\r\n            this.setState({totalPriceLocal:x})\r\n\r\n            this.props.finishedLoading()\r\n        })\r\n    }\r\n\r\n    //all through currentUser in Redux!! no local storage!! only for password and username\r\n\r\n    handleDropdownChange = async (days) => {\r\n        this.setState({days:days})\r\n        this.loadData(days)\r\n    }\r\n\r\n    handleDropdownChangeFilters = async (data) => {\r\n        this.setState({filter:data})\r\n        this.loadData(this.state.days,data)\r\n    }\r\n    render(){\r\n        if(this.props.loading)\r\n            return <Col xs={12} className=\"d-flex justify-content-center spinner-style\"><CircularProgress /></Col>\r\n        if(this.state.products === null || this.state.products === undefined || this.state.products.length === 0)\r\n            return <Container>\r\n                <h1 style={{textAlign:\"right\"}}>נתוני צריכה</h1>\r\n            <h1 className=\"align-none\">לא נסרקו עדיין מוצרים</h1>\r\n                </Container>\r\n        return(\r\n            <Container className=\"margin-top-container\">\r\n             \r\n<h1 style={{textAlign:\"right\"}}>נתוני צריכה</h1>\r\n<Row>\r\n<Dropdown>\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n            מיון      לפי    {this.state.days} ימים אחרונים\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(7)}>לפי 7 ימים אחרונים</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(30)}>לפי 30 ימים אחרונים </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(365)}>לפי 365 ימים אחרונים</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <Dropdown className=\"dropdown-style\">\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  {this.state.filter === 'price' ? 'מיון לפי מחיר כולל' : 'מיון לפי כמות'}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChangeFilters('price')}>מחיר כולל</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChangeFilters('amount')}>כמות </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    </Row>\r\n\r\n                    <Table\r\n          bordered hover\r\n          className=\"dashboard-table table-hover-animation mb-0 mt-1 style-center\"\r\n        >\r\n          <thead>\r\n          <tr>\r\n    <th>מחיר כולל</th>\r\n    <th>כמות</th>\r\n\r\n      <th>תמונה</th>\r\n      <th>שם מוצר</th>\r\n    </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n\r\n          {this.state.products.map(current => {\r\n          return <tr key={current._id.barcode}>\r\n                        <td>{(Math.round((current.price) * 100) / 100).toFixed(2)}₪</td>\r\n                        <td>{current.total}</td>\r\n\r\n          <td><img height=\"50px\" src={current._id.image}/></td>\r\n          <td>{current._id.name}</td>\r\n\r\n        </tr>\r\n      })}\r\n    <tr key={'total'}>\r\n          <td>{(Math.round((this.state.totalPriceLocal) * 100) / 100).toFixed(2)} ₪ </td>\r\n          <td></td>\r\n          <td></td>\r\n          <td>סה\"כ</td>\r\n\r\n        </tr>\r\n        \r\n          </tbody>\r\n        </Table>\r\n\r\n\r\n{/* <Table bordered hover className=\"table-style\">\r\n  <thead className=\"table-header\">\r\n    <tr>\r\n    <th>מחיר כולל</th>\r\n    <th>כמות</th>\r\n\r\n      <th>תמונה</th>\r\n      <th>שם מוצר</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.products.map(current => {\r\n          return <tr key={current._id.barcode}>\r\n                        <td>{(Math.round((current.price) * 100) / 100).toFixed(2)}₪</td>\r\n                        <td>{current.total}</td>\r\n\r\n          <td><img height=\"50px\" src={current._id.image}/></td>\r\n          <td>{current._id.name}</td>\r\n\r\n        </tr>\r\n      })}\r\n    <tr key={'total'}>\r\n          <td>{(Math.round((this.state.totalPriceLocal) * 100) / 100).toFixed(2)} ₪</td>\r\n\r\n        </tr>\r\n  </tbody>\r\n</Table> */}\r\n</Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.main.currentUser,\r\n        loggedIn: state.main.loggedIn,\r\n        loading: state.loading.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCurrentUser: (user) => dispatch(mainActions.updateUsername(user)),\r\n        setLoggedIn: () => dispatch(mainActions.loggedIn()),\r\n        load: () => dispatch(loadingActions.loading()),\r\n        finishedLoading: () => dispatch(loadingActions.finishedLoading()),\r\n        logIn: (email, password) => dispatch(mainActions.logIn(email, password))\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardFilters);",["171","172"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\loadingReducer.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\loadingActions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\UtilityFunctions\\functions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\actionTypes.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\promptReducer.js",[],["173","174"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\mainActions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\store.js",[],["175","176"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\ErrorBoundary\\ErrorBoundary.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\mainReducer.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Register\\Register.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Settings\\Settings.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\promptActions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Prompt\\Prompt.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Axios\\config.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\AdminLogin\\AdminLogin.js",["177"],"import React, { Component } from 'react'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport { connect } from 'react-redux'\r\nimport { Form, Button, Container,Col,Row } from 'react-bootstrap';\r\nimport './adminLogin.scss'\r\nimport { ADMIN_PATH } from '../../Constants/const'\r\n\r\nclass logInAdmin extends Component {\r\n  state = {\r\n    email: '',\r\n    password: ''\r\n  }\r\n  handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    await this.props.logInAdmin(this.state.email, this.state.password);\r\n    if (this.props.loggedIn) {\r\n      this.props.history.push(ADMIN_PATH);\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"form app-background\">\r\n        <Col xs={12} lg={{ span: 6, offset: 3 }} className=\"form-style\">\r\n        <h2 style={{textAlign:\"center\"}}>Admin Login</h2>\r\n\r\n        <Form onSubmit={(e) => this.handleSubmit(e)} style={{textAlign:\"right\"}} >\r\n        <Col className=\"top\">\r\n          <Form.Group controlId=\"formBasicEmail\">\r\n            {/* <Form.Label>דואר אלקטרוני</Form.Label> */}\r\n            <Form.Control type=\"email\" placeholder=\"הכנס דואר אלקטרוני\" name=\"email\" onChange={(e) => this.handleChange(e)} />\r\n\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formBasicPassword\">\r\n            {/* <Form.Label>סיסמה</Form.Label> */}\r\n            <Form.Control type=\"password\" placeholder=\"הכנס סיסמה\" name=\"password\" onChange={(e) => this.handleChange(e)} />\r\n          </Form.Group>\r\n          \r\n          \r\n          <Button className=\"btn-block mr-1 mt-1\" variant=\"primary\" type=\"submit\">\r\n            התחבר\r\n  </Button>\r\n          </Col>\r\n\r\n        </Form>\r\n        </Col>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.main.currentUser,\r\n    loggedIn: state.main.loggedIn\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    logInAdmin: (email, password) => dispatch(mainActions.logInAdmin(email, password))\r\n\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(logInAdmin);\r\n","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\AdminDashboard\\AdminDashboard.js",["178","179","180","181","182","183","184","185","186"],"import React,{Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport * as promptActions from '../../Store/Actions/promptActions'\r\nimport * as loadingActions from '../../Store/Actions/loadingActions'\r\nimport { LOGIN_PATH } from '../../Constants/const';\r\nimport { getCurrentUser } from '../../UtilityFunctions/functions';\r\nimport { Container,Dropdown,Table,Spinner,Col } from 'react-bootstrap';\r\nimport axios from '../../Axios/config'\r\n// import './dashboard.scss'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n// import 'react-date-range/dist/styles.css'; \r\n// import 'react-date-range/dist/theme/default.css'; \r\n// import { Calendar } from 'react-date-range';\r\nimport { DateRangePicker } from 'rsuite';\r\nimport { Package } from \"react-feather\"\r\nimport StatisticsCard from '../../Assets/StatisticsCard'\r\nimport DispatchedOrders from '../../Assets/DispatchedOrders'\r\n\r\nimport 'rsuite/dist/styles/rsuite-default.css';\r\n\r\n\r\nclass AdminDashboard extends Component {\r\n    state = {\r\n        shufersal:[],\r\n        ramiLevy:[],\r\n        totalActiveUsers:0,\r\n        notAdded: [],\r\n        users: [],\r\n        shufersalTotal: 0,\r\n        ramiLevyTotal: 0,\r\n        image: '',\r\n        days: 30,\r\n        shufersalTotalNotComparison:0,\r\n        ramiLevyTotalNotComparison: 0,\r\n        products:[],\r\n        currentSearchedEmail: '',\r\n        usersList: []\r\n\r\n    }\r\n   \r\n    componentDidMount = async () => {\r\n        // axios.get('https://chp.co.il/autocompletion/product_extended?term=8717163647226').then(data=> console.log(data.data[0].value))\r\n        if (!this.props.loggedIn) {\r\n            if (getCurrentUser()) {\r\n                this.props.setLoggedIn()\r\n                this.loadData(30)\r\n            }\r\n            else {\r\n                this.props.history.push(LOGIN_PATH)\r\n            }\r\n        }\r\n        else{\r\n            this.loadData()\r\n        }\r\n    }\r\n    loadData = async (arr) => {\r\n        this.props.load()\r\n        // axios.post('/admin/activeUsers',{email:getCurrentUser().email,admin:true,isShufersal:false}).then(data=>this.setState({arr:data.data}))\r\n        await axios.post('/admin/agg',{email:getCurrentUser().email,admin:true,isShufersal:true, min:arr[1],max:arr[0]}).then(data=>this.setState({shufersal: data.data}))\r\n        await axios.post('/admin/agg',{email:getCurrentUser().email,admin:true,isShufersal:false, min:arr[1],max:arr[0]}).then(data=>this.setState({ramiLevy: data.data}))\r\n        await axios.post('/admin/totalActiveUsers',{email:getCurrentUser().email,admin:true, min:arr[1],max:arr[0]}).then(data=>{this.setState({totalActiveUsers: data.data.length})})\r\n        await axios.post('/admin/notAdded',{email:getCurrentUser().email,admin:true, min:arr[1],max:arr[0]}).then(data=>this.setState({notAdded: data.data}))\r\n        const usersCurrent =  await axios.post('/admin/findAll',{email:getCurrentUser().email,admin:true, min:arr[1],max:arr[0]})\r\n        var realAll = new Array(usersCurrent.length)\r\n        for(let i = 0; i<usersCurrent.data.length;i++){\r\n          // realAll[i].email = usersCurrent.data[i]._id.email;\r\n          const start = new Date(); \r\n          start.setDate(start.getDate() + 1)\r\n          var all = []\r\n          for(let j =0; j<7; j++){\r\n            const before = new Date(start) //late\r\n            start.setDate(start.getDate() - 1)\r\n            await axios.post('/admin/usersData',{email:getCurrentUser().email,admin:true,min:before,max:start,findEmail:usersCurrent.data[i]._id.email}).then(data=>{all.push({arr: data})})\r\n          }\r\n          all.email = usersCurrent.data[i]._id.email\r\n          realAll.push(all)\r\n        }\r\n        this.setState({users: realAll})\r\n        const filterUsers1 = realAll.filter(current => current!==undefined)\r\n        const filterUsers = filterUsers1.map(current => current!==undefined && current.email)\r\n        this.setState({usersList: filterUsers})\r\n    }\r\n\r\n    loadForUser = async (searched) => {\r\n      const shufersalTotalPrice = await axios.post('/admin/total', {email:getCurrentUser().email,searchEmail:searched,isShufersal: true,admin:true})\r\n        const ramiLevyTotalPrice = await axios.post('/admin/total', {email:getCurrentUser().email,searchEmail:searched,isShufersal: false,admin:true})\r\n        const filteredShufersal = shufersalTotalPrice.data.filter(current => current._id.selection === \"shufersalPrice\")\r\n        const filteredRamiLevy = ramiLevyTotalPrice.data.filter(current => current._id.selection === \"ramiLevyPrice\")\r\n        if(filteredShufersal.length > 0 && filteredRamiLevy.length >0){\r\n          this.setState({shufersalTotalNotComparison: filteredShufersal[0].price})\r\n          this.setState({ramiLevyTotalNotComparison: filteredRamiLevy[0].price})  \r\n        }\r\n        axios.post('/admin/user', {email: getCurrentUser().email, searchEmail:searched,admin:true}).then(data => {\r\n          this.setState({products: data.data});\r\n            let y = 0, m = 0;\r\n            for(let x in data.data){\r\n                if(data.data[x].shufersalPrice!=='לא נמצא' && data.data[x].ramiLevyPrice!=='לא נמצא'){\r\n                    y += data.data[x].shufersalPrice;\r\n                    m += data.data[x].ramiLevyPrice;\r\n                }\r\n            }\r\n            this.setState({shufersalTotal: y})\r\n            this.setState({ramiLevyTotal: m})\r\n        })\r\n    }\r\n    handleDropdownChange = async (days) => {\r\n        this.setState({days:days})\r\n        this.loadData(days)\r\n    }\r\n\r\n    checkArr = (arr) => {\r\n        if(arr !== undefined && arr !== null && arr[0] !== undefined)\r\n            return true;\r\n        return false;\r\n    }\r\n\r\n    render(){\r\n        let x = null,y=null,z=null;\r\n        if(this.state.totalActiveUsers!==0){\r\n            x = (<Table bordered hover className=\"table-style\">\r\n            <thead>\r\n              <tr className=\"table-header\">\r\n              <th >(משתמשים יחודיים) סהכ</th>\r\n                <th>רמי לוי</th>\r\n                <th>שופרסל</th>\r\n                <th></th>\r\n          \r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n                 <tr>\r\n                    <td>{this.checkArr(this.state.ramiLevy.price) && (Math.round((this.state.ramiLevy.price[0].price+ this.state.shufersal.price[0].price) * 100) / 100).toFixed(2) }</td>\r\n                    <td>{this.checkArr(this.state.ramiLevy.price) && this.state.ramiLevy.price[0].price}</td>\r\n                    <td>{this.checkArr(this.state.shufersal.price) && this.state.shufersal.price[0].price}</td>\r\n                    <th>סה\"כ רכישות</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>{this.state.totalActiveUsers}</td>\r\n                    <td>{this.state.ramiLevy.activeUsers && this.state.ramiLevy.activeUsers.length}</td>\r\n                    <td>{this.state.shufersal.activeUsers && this.state.shufersal.activeUsers.length}</td>\r\n                    <th>משתמשים פעילים</th>\r\n                  </tr>          \r\n                  <tr>\r\n                    <td>{this.checkArr(this.state.ramiLevy.price) && (Math.round(((this.state.ramiLevy.price[0].price+ this.state.shufersal.price[0].price) / this.state.totalActiveUsers) * 100) / 100).toFixed(2) }</td>\r\n                    <td>{this.checkArr(this.state.ramiLevy.price)&&(this.state.ramiLevy.price[0].price / this.state.ramiLevy.activeUsers.length)}</td>\r\n                    <td>{this.checkArr(this.state.shufersal.price) && (Math.round((this.state.shufersal.price[0].price / this.state.shufersal.activeUsers.length) * 100) / 100).toFixed(2)}</td>\r\n                    <th>ממוצע רכישות</th>\r\n                  </tr>\r\n          \r\n                  \r\n            </tbody>\r\n          </Table>) \r\n        }\r\n        if(this.state.notAdded.length>0){\r\n        y=(<Table bordered hover className=\"table-style\">\r\n        <thead className=\"table-header\">\r\n          <tr>\r\n          <th>סהכ</th>\r\n\r\n            <th>לקוחות שופרסל</th>\r\n            <th>רמי לוי</th>\r\n            <th>מוצרים שלא נמצאו</th>\r\n\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n            {this.state.notAdded.map(current => {\r\n                const nameToshow = current._id.name !== '' ? current._id.name : `${current._id.barcode} :ברקוד`\r\n                          const date = new Date(current.creationDate);\r\n                          const newDate = date.toLocaleDateString('he-IS');          \r\n                return <tr key={current._id}>\r\n                              <td>{current.totalShufersal+current.totalRamiLevy}</td>\r\n                <td>{current.totalShufersal}</td>\r\n                <td>{current.totalRamiLevy}</td>\r\n                <td>{nameToshow}</td>\r\n\r\n              </tr>\r\n            })}\r\n          \r\n        </tbody>\r\n      </Table>) \r\n       \r\n        }\r\n        z=(<Table bordered hover className=\"table-style\">\r\n      <thead>\r\n        <tr className=\"table-header\">\r\n        <th >אימייל</th>\r\n          <th>היום</th>\r\n          <th>אתמול</th>\r\n          <th>שלשום</th>\r\n          <th>לפני 3 ימים</th>\r\n          <th>לפני 4 ימים</th>\r\n          <th>לפני 5 ימים</th>\r\n          <th>לפני 6 ימים</th>\r\n    \r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n      {this.state.users.map(current => {\r\n          if(current !== undefined){\r\n            // if(current[0].arr.data[0] !== undefined)\r\n            //   console.log(current[0].arr.data[0].price)\r\n\r\n              return <tr>\r\n              <td>{current.email !== undefined && current.email}</td>\r\n              <td>{current[0].arr.data[0] !== undefined && current[0].arr.data[0].price}</td>\r\n              <td>{current[1].arr.data[0] !== undefined && current[1].arr.data[0].price}</td>\r\n              <td>{current[2].arr.data[0] !== undefined && current[2].arr.data[0].price}</td>\r\n              <td>{current[3].arr.data[0] !== undefined && current[3].arr.data[0].price}</td>\r\n              <td>{current[4].arr.data[0] !== undefined && current[4].arr.data[0].price}</td>\r\n              <td>{current[5].arr.data[0] !== undefined && current[5].arr.data[0].price}</td>\r\n              <td>{current[6].arr.data[0] !== undefined && current[6].arr.data[0].price}</td>\r\n              \r\n              {/* <td>{my.arr.data._id.email}</td> */}\r\n            </tr>\r\n            }\r\n          }\r\n                \r\n      )}\r\n      </tbody>\r\n    </Table>) \r\n       return(\r\n           <div>\r\n    <h1>Dashboard Admin</h1>\r\n           \r\n    <DateRangePicker \r\n        onChange={(e)=>this.loadData(e)}\r\n        placeholder=\"Select Date Range\"\r\n    />\r\n\r\n        {x}\r\n        {y}\r\n        {z}\r\n        <Dropdown>\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\nבחר מייל                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                        {this.state.usersList.map(current=> {\r\n                            return  <Dropdown.Item onClick={()=>this.loadForUser(current)}>{current}</Dropdown.Item>\r\n\r\n                          })}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n        <Table bordered hover className=\"table-style\">\r\n  <thead>\r\n    <tr className=\"table-header\">\r\n      <th className=\"table-style-image\">ניתן לחסוך</th>\r\n      <th className=\"table-style-image\">שופרסל</th>\r\n      <th className=\"table-style-image\">רמי לוי</th>\r\n      <th className=\"table-style-image\">תמונה</th>\r\n      <th>שם מוצר</th>\r\n      <th className=\"d-none d-lg-table-cell\">תאריך</th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.products.map((current) => {\r\n          const date = new Date(current.creationDate);\r\n          const newDate = date.toLocaleDateString('he-IS');\r\n        //   const greater = current.shufersalPrice < current.ramiLevyPrice ? 'shufersal' : 'ramiLevy'\r\n          //greater === 'shufersal' ? 'red-style' : 'green-style'\r\n          const isSelectionShufersal = current.selection === 'Shufersal' ? true : false;\r\n          const difference = (Math.round((current.shufersalPrice-current.ramiLevyPrice) * 100) / 100).toFixed(2);\r\n          let message = ''\r\n          if(isSelectionShufersal){\r\n            if(difference>0){\r\n                message = `₪ ${Math.abs(difference)} ניתן לחסוך ברמי לוי`\r\n            }\r\n            \r\n          }\r\n          else{\r\n            if(difference<0){\r\n                message = `₪ ${Math.abs(difference)} ניתן לחסוך בשופרסל`\r\n            }\r\n            \r\n          }\r\n          return <tr key={current._id}>\r\n          <td className='table-style-image'>{message} </td>\r\n          <td className={(!isSelectionShufersal && 'gray-style') + ' table-style-image'}>{current.shufersalPrice} {current.shufersalPrice !=='לא נמצא' && '₪'} {isSelectionShufersal && <div>🛒</div>}</td>\r\n      <td className={(isSelectionShufersal && 'gray-style') + ' table-style-image'}>{current.ramiLevyPrice} {current.ramiLevyPrice !=='לא נמצא' && '₪'} {!isSelectionShufersal && <div>🛒</div>}</td>\r\n          <td className=\"table-style-image\"><img height=\"50px\" src={current.image}/></td>\r\n          <td>{current.name}</td>\r\n          <td className=\"d-none d-lg-table-cell\">{newDate}</td>\r\n\r\n        </tr>\r\n                      \r\n      })}\r\n        <tr key='totalPrice' style={{borderTop: \"2px solid black\"}}>\r\n          <td></td>\r\n          <td>{((Math.round(this.state.shufersalTotalNotComparison * 100) / 100).toFixed(2))}₪</td>\r\n          <td>{((Math.round(this.state.ramiLevyTotalNotComparison * 100) / 100).toFixed(2))}₪</td>\r\n          <td>מחיר כולל לפי סל</td>\r\n        </tr>\r\n\r\n        \r\n  </tbody>\r\n</Table>\r\n\r\n<Table bordered hover className=\"table-style-image table-style\">\r\n  <thead>\r\n    <tr className=\"table-header\">\r\n      <th>ניתן לחסוך</th>\r\n      <th>שופרסל</th>\r\n      <th>רמי לוי</th>\r\n      <th></th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n\r\n\r\n<tr key='totalComparison'>\r\n    <td>{Math.abs((Math.round(((this.state.ramiLevyTotal-this.state.shufersalTotal)) * 100) / 100).toFixed(2))} ₪ :הפרש מחיר בין הסלים</td>\r\n\r\n          <td className={this.state.shufersalTotal < this.state.ramiLevyTotal ? 'green-style' : 'red-style'}>{(Math.round(this.state.shufersalTotal * 100) / 100).toFixed(2)} ₪</td>\r\n          <td className={this.state.shufersalTotal > this.state.ramiLevyTotal ? 'green-style' : 'red-style'}>{(Math.round(this.state.ramiLevyTotal * 100) / 100).toFixed(2)} ₪</td>\r\n          <td> השוואת סלים בין מוצרים זהים</td>\r\n        </tr>\r\n</tbody>\r\n\r\n</Table>    \r\n        <Col lg=\"3\" md=\"6\" sm=\"12\">\r\n        <StatisticsCard\r\n        icon={<Package className=\"warning\" size={22} />}\r\n        iconBg=\"warning\"\r\n        stat=\"97.5K\"\r\n        statTitle=\"Orders Received\"\r\n        type=\"area\"\r\n        options={{chart: {\r\n          id: \"subscribers\",\r\n          toolbar: {\r\n            show: false\r\n          },\r\n          sparkline: {\r\n            enabled: true\r\n          }\r\n        },\r\n        grid: {\r\n          show: false\r\n        },\r\n        colors: [\"#7367F0\"],\r\n        dataLabels: {\r\n          enabled: false\r\n        },\r\n        stroke: {\r\n          curve: \"smooth\",\r\n          width: 2.5\r\n        },\r\n        fill: {\r\n          type: \"gradient\",\r\n          gradient: {\r\n            shadeIntensity: 0.9,\r\n            opacityFrom: 0.7,\r\n            opacityTo: 0.5,\r\n            stops: [0, 80, 100]\r\n          }\r\n        },\r\n      \r\n        xaxis: {\r\n          labels: {\r\n            show: false\r\n          },\r\n          axisBorder: {\r\n            show: false\r\n          }\r\n        },\r\n        yaxis: {\r\n          labels: {\r\n            show: false\r\n          }\r\n        },\r\n        tooltip: {\r\n          x: { show: false }\r\n        }}}\r\n        series={[\r\n          {\r\n            name: \"Test\",\r\n            data: [10, 40, 36, 52, 38, 60, 55]\r\n          }\r\n        ]}\r\n        type=\"area\"\r\n      />\r\n<DispatchedOrders />\r\n          </Col>\r\n        \r\n           {/* {this.state.shufersal.map(current => {\r\n               return <div key={current._id}>\r\n                   <p>Day: {current._id}</p>\r\n                   <p>Products Added :{current.totalProductsAdded}</p>\r\n                   <p>Users List: {current.totalUsers.map(currentUser => {return <p key={currentUser}>{currentUser}</p>})}</p>\r\n                   <p>Users Amount: {current.totalUsers.length}</p>\r\n\r\n                   </div>\r\n           })} */}\r\n\r\n           </div>\r\n           \r\n       );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.main.currentUser,\r\n        loggedIn: state.main.loggedIn,\r\n        loading: state.loading.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCurrentUser: (user) => dispatch(mainActions.updateUsername(user)),\r\n        setLoggedIn: () => dispatch(mainActions.loggedIn()),\r\n        load: () => dispatch(loadingActions.loading()),\r\n        finishedLoading: () => dispatch(loadingActions.finishedLoading()),\r\n        logIn: (email, password) => dispatch(mainActions.logIn(email, password))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminDashboard);","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Assets\\StatisticsCard.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Assets\\DispatchedOrders.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardComparison\\DashboardComparison.js",["187","188","189"],"import React,{Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport * as loadingActions from '../../Store/Actions/loadingActions'\r\nimport { LOGIN_PATH } from '../../Constants/const';\r\nimport { getCurrentUser } from '../../UtilityFunctions/functions';\r\nimport { Container,Dropdown,Col } from 'react-bootstrap';\r\nimport axios from '../../Axios/config'\r\nimport './DashboardComparison.scss'\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport {Table} from \"reactstrap\"\r\nimport \"../../Assets/scss/pages/dashboard-analytics.scss\"\r\nimport \"../../Assets/scss/bootstrap-extended/_tables.scss\"\r\n\r\nclass DashboardComparison extends Component {\r\n    state = {\r\n        products: [],\r\n        shufersalTotal: 0,\r\n        ramiLevyTotal: 0,\r\n        image: '',\r\n        days: 30,\r\n        }\r\n\r\n    componentDidMount = async () => {\r\n        if (!this.props.loggedIn) {\r\n            if (getCurrentUser()) {\r\n                this.props.setLoggedIn()\r\n                this.loadData(this.state.days)\r\n            }\r\n            else {\r\n                this.props.history.push(LOGIN_PATH)\r\n            }\r\n        }\r\n        else{\r\n            this.loadData(this.state.days)\r\n        }\r\n    }\r\n    loadData = async (days) => {\r\n      this.props.load()\r\n      axios.post('/products/aggByMarket',{email:getCurrentUser().email,number:days, isShufersal:true}).then(data=>{\r\n          this.setState({products:data.data})\r\n          let x = 0,y=0;\r\n          for(let i = 0; i<data.data.length; i++){\r\n              x+= data.data[i].priceSufersal;\r\n              y+=data.data[i].priceRamiLevy;\r\n          }\r\n          this.setState({shufersalTotal:x})\r\n          this.setState({ramiLevyTotal:y})\r\n\r\n          this.props.finishedLoading()\r\n      })\r\n    }\r\n\r\n    handleDropdownChange = async (days) => {\r\n        this.setState({days:days})\r\n        this.loadData(days)\r\n    }\r\n\r\n    render(){\r\n        if(this.props.loading)\r\n            return <Col xs={12} className=\"d-flex justify-content-center spinner-style\"><CircularProgress /></Col>\r\n        if(this.state.products === null || this.state.products === undefined || this.state.products.length === 0)\r\n            return <Container>\r\n            <h1 style={{textAlign:\"right\"}}>השוואת מחירים</h1>\r\n            <h1 className=\"table-style-image margin-top-container\">לא נסרקו עדיין מוצרים</h1>\r\n            </Container>\r\n            \r\n        return(\r\n            <Container className=\"margin-top-container\">\r\n            <h1 className=\"align-right\">השוואת מחירים</h1>\r\n            <Dropdown>\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  לפי    {this.state.days} ימים אחרונים\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(7)}>לפי 7 ימים אחרונים</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(30)}>לפי 30 ימים אחרונים </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(365)}>לפי 365 ימים אחרונים</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    {/* <p className=\"align-right\">לאיזו עגלה המוצר נכנס = 🛒</p> */}\r\n\r\n\r\n     \r\n        <Table\r\n          bordered hover\r\n          className=\"dashboard-table table-hover-animation mb-0 mt-1 style-center\"\r\n        >\r\n          <thead>\r\n          <tr className=\"table-header\">\r\n      <th className=\"table-style-image\">ניתן לחסוך</th>\r\n      <th className=\"table-style-image\">מחיר כולל שופרסל</th>\r\n      <th className=\"table-style-image\">מחיר כולל רמי לוי</th>\r\n      <th className=\"table-style-image\">תמונה</th>\r\n      <th>שם מוצר</th>\r\n\r\n    </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n\r\n          {this.state.products.map((current) => {\r\n          const isSelectionShufersal = current.selection === 'Shufersal';\r\n          const difference = (Math.round((current.priceSufersal-current.priceRamiLevy) * 100) / 100).toFixed(2);\r\n          let message = ''\r\n          if(isSelectionShufersal){\r\n            if(difference>0){\r\n                message = `₪ ${Math.abs(difference)} ניתן לחסוך ברמי לוי`\r\n            }\r\n            \r\n          }\r\n          else{\r\n            if(difference<0){\r\n                message = `₪ ${Math.abs(difference)} ניתן לחסוך בשופרסל`\r\n            }\r\n            \r\n          }\r\n          if(current.shufersalPrice !== 'לא נמצא' && current.ramiLevyPrice !== 'לא נמצא'){\r\n\r\n              return <tr key={current._id.barcode}>\r\n              <td>{difference}₪</td>\r\n              <td>{Math.abs((Math.round((current.priceSufersal) * 100) / 100).toFixed(2))} ₪</td>\r\n              <td>{Math.abs((Math.round((current.priceRamiLevy) * 100) / 100).toFixed(2))} ₪</td>\r\n              <td className=\"table-style-image\"><img height=\"50px\" src={current._id.image}/></td>\r\n              <td className='table-style-image'>{current._id.name}</td>\r\n\r\n            </tr>\r\n                          \r\n          }\r\n          \r\n                      \r\n      })}\r\n       <tr key='totalComparisonHeader'>\r\n    <th>ניתן לחסוך</th>\r\n    <th>שופרסל</th>\r\n    <th>רמי לוי</th>\r\n    <td></td>\r\n    <td></td>\r\n        </tr>\r\n        <tr key='totalComparison'>\r\n    <td>{Math.abs((Math.round(((this.state.ramiLevyTotal-this.state.shufersalTotal)) * 100) / 100).toFixed(2))} ₪ :הפרש מחיר בין הסלים</td>\r\n\r\n          <td className={this.state.shufersalTotal < this.state.ramiLevyTotal ? 'green-style' : 'red-style'}>{(Math.round(this.state.shufersalTotal * 100) / 100).toFixed(2)} ₪</td>\r\n          <td className={this.state.shufersalTotal > this.state.ramiLevyTotal ? 'green-style' : 'red-style'}>{(Math.round(this.state.ramiLevyTotal * 100) / 100).toFixed(2)} ₪</td>\r\n          <td></td>\r\n          <th> סה\"כ</th>\r\n        </tr>\r\n          </tbody>\r\n        </Table>\r\n\r\n\r\n                                {/* <Table bordered hover className=\"table-style\">\r\n  <thead>\r\n    <tr className=\"table-header\">\r\n      <th className=\"table-style-image\">ניתן לחסוך</th>\r\n      <th className=\"table-style-image\">שופרסל</th>\r\n      <th className=\"table-style-image\">רמי לוי</th>\r\n      <th className=\"table-style-image\">תמונה</th>\r\n      <th>שם מוצר</th>\r\n      <th className=\"d-none d-lg-table-cell\">תאריך</th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.products.map((current) => {\r\n          const date = new Date(current.creationDate);\r\n          const newDate = date.toLocaleDateString('he-IS');\r\n        //   const greater = current.shufersalPrice < current.ramiLevyPrice ? 'shufersal' : 'ramiLevy'\r\n          //greater === 'shufersal' ? 'red-style' : 'green-style'\r\n          const isSelectionShufersal = current.selection === 'Shufersal' ? true : false;\r\n          const difference = (Math.round((current.shufersalPrice-current.ramiLevyPrice) * 100) / 100).toFixed(2);\r\n          let message = ''\r\n          if(isSelectionShufersal){\r\n            if(difference>0){\r\n                message = `₪ ${Math.abs(difference)} ניתן לחסוך ברמי לוי`\r\n            }\r\n            \r\n          }\r\n          else{\r\n            if(difference<0){\r\n                message = `₪ ${Math.abs(difference)} ניתן לחסוך בשופרסל`\r\n            }\r\n            \r\n          }\r\n          return <tr key={current._id}>\r\n          <td className='table-style-image'>{message} </td>\r\n          <td className={(!isSelectionShufersal && 'gray-style') + ' table-style-image'}>{current.shufersalPrice} {current.shufersalPrice !=='לא נמצא' && '₪'} {isSelectionShufersal && <div>🛒</div>}</td>\r\n      <td className={(isSelectionShufersal && 'gray-style') + ' table-style-image'}>{current.ramiLevyPrice} {current.ramiLevyPrice !=='לא נמצא' && '₪'} {!isSelectionShufersal && <div>🛒</div>}</td>\r\n          <td className=\"table-style-image\"><img height=\"50px\" src={current.image}/></td>\r\n          <td>{current.name}</td>\r\n          <td className=\"d-none d-lg-table-cell\">{newDate}</td>\r\n\r\n        </tr>\r\n                      \r\n      })}\r\n        <tr key='totalPrice' style={{borderTop: \"2px solid black\"}}>\r\n          <td></td>\r\n          <td>{((Math.round(this.state.shufersalTotalNotComparison * 100) / 100).toFixed(2))}₪</td>\r\n          <td>{((Math.round(this.state.ramiLevyTotalNotComparison * 100) / 100).toFixed(2))}₪</td>\r\n          <td>מחיר כולל לפי סל</td>\r\n        </tr>\r\n\r\n        \r\n  </tbody>\r\n</Table> */}\r\n\r\n\r\n\r\n\r\n</Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.main.currentUser,\r\n        loggedIn: state.main.loggedIn,\r\n        loading: state.loading.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCurrentUser: (user) => dispatch(mainActions.updateUsername(user)),\r\n        setLoggedIn: () => dispatch(mainActions.loggedIn()),\r\n        load: () => dispatch(loadingActions.loading()),\r\n        finishedLoading: () => dispatch(loadingActions.finishedLoading()),\r\n        logIn: (email, password) => dispatch(mainActions.logIn(email, password))\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardComparison);","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\FAQ\\Faq.js",["190"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\FAQ\\FaqQuestions.js",[],["191","192"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Home\\Home.js",["193","194","195","196"],"import React, { Component } from 'react'\r\nimport { Form, Button, Container,Col,Row } from 'react-bootstrap';\r\nimport SliderDefault from '../../Assets/SliderDefault'\r\nimport H1CtaSection from '../../Assets/H1CtaSection'\r\nclass Home extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n          <SliderDefault />\r\n          <H1CtaSection />\r\n       <h1>Home page</h1>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Assets\\SliderDefault.js",["197","198","199"],"import React, { Component, useState } from 'react';\r\nimport Slider from \"react-slick\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst SliderDefault = () =>  {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const openModal = () => setIsOpen(!isOpen);\r\n\r\n    function SampleNextArrow(props) {\r\n        const { className, onClick } = props;\r\n        return (\r\n            <button type='button' onClick={onClick} className={className}><i><FontAwesomeIcon icon={['fas', 'chevron-right']}/></i></button>\r\n        );\r\n    }\r\n\r\n    function SamplePrevArrow(props) {\r\n        const { className, onClick } = props;\r\n        return (\r\n            <button type='button' onClick={onClick} className={className}> <i><FontAwesomeIcon icon={['fas', 'chevron-left']}/></i></button>\r\n        );\r\n    }\r\n\r\n    const settings = {\r\n        className: \"slider-active\",\r\n        dots: false,\r\n        slidesToShow: 1,\r\n        speed: 500,\r\n        fade: true,\r\n        infinite: true,\r\n        nextArrow: <SampleNextArrow />,\r\n        prevArrow: <SamplePrevArrow />,\r\n        arrows: true,\r\n        slidesToScroll: 1,\r\n        responsive: [\r\n            {\r\n                breakpoint: 1024,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    infinite: true,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 991,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    arrows: false,\r\n                }\r\n            },\r\n            {\r\n                breakpoint: 480,\r\n                settings: {\r\n                    slidesToShow: 1,\r\n                    slidesToScroll: 1,\r\n                    arrows: false,\r\n                }\r\n            }\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <div className=\"slider-area\">\r\n            <Slider {...settings}>\r\n                <div className=\"single-slider\">\r\n                {/* style={{ backgroundImage:`url(${'assets/img/slider/slider1.jpg'})`}} */}\r\n                    <div className=\"slider-height  d-flex align-items-center\" >\r\n                        <div className=\"container\">\r\n                            <div className=\"row \">\r\n                                <div className=\"col-xl-12\">\r\n                                    <div className=\"slider-content mt-85\">\r\n                                        <h1 data-animation=\"fadeInUp\" data-delay=\".6s\">\r\n                                            Organic Food Is <br /> Good For Health\r\n                                        </h1>\r\n                                        <p data-animation=\"fadeInUp\" data-delay=\".8s\">\r\n                                            Lorem ipsum dolor sit amet,\r\n                                            consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et\r\n                                            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                                            ullamco.\r\n                                        </p>\r\n                                        <div className=\"slider-button\">\r\n                                            {/* <Link href=\"/services\" as=\"/services\" >\r\n                                                <a data-animation=\"fadeInLeft\" data-delay=\".8s\" className=\"btn\">\r\n                                                    Our Services\r\n                                                </a>\r\n                                            </Link>\r\n                                            <Link href=\"/contact\" as=\"/contact\" >\r\n                                                <a data-animation=\"fadeInRight\" data-delay=\"1s\" className=\"btn active\">\r\n                                                    Contact Us\r\n                                                </a>\r\n                                            </Link> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"single-slider\">\r\n                {/* style={{ backgroundImage:`url(${'assets/img/slider/slider1-2.jpg'})`}} */}\r\n                    <div className=\"slider-height  d-flex align-items-center\" >\r\n                        <div className=\"container\">\r\n                            <div className=\"row \">\r\n                                <div className=\"col-xl-12\">\r\n                                    <div className=\"slider-content mt-85\">\r\n                                        <h1 data-animation=\"fadeInUp\" data-delay=\".6s\">\r\n                                            Organic Food Is <br /> Good For Health\r\n                                        </h1>\r\n                                        <p data-animation=\"fadeInUp\" data-delay=\".8s\">\r\n                                            Lorem ipsum dolor sit amet,\r\n                                            consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et\r\n                                            dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation\r\n                                            ullamco.\r\n                                        </p>\r\n                                        <div className=\"slider-button\">\r\n                                            {/* <Link href=\"/services\" as=\"/services\" >\r\n                                                <a data-animation=\"fadeInLeft\" data-delay=\".8s\" className=\"btn\">\r\n                                                    Our Services\r\n                                                </a>\r\n                                            </Link>\r\n                                            <Link href=\"/contact\" as=\"/contact\" >\r\n                                                <a data-animation=\"fadeInRight\" data-delay=\"1s\" className=\"btn active\">\r\n                                                    Contact Us\r\n                                                </a>\r\n                                            </Link> */}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Slider>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SliderDefault;","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Assets\\H1CtaSection.js",["200"],"import React, {Component} from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass H1CtaSection extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t// style={{backgroundImage: `url(${'assets/img/bg/bg2.jpg'})`}}\r\n\t\t\t<div className=\"cta-area pt-100 pb-90\" >\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t\t<div className=\"col-xl-8 col-lg-8 col-md-8\">\r\n\t\t\t\t\t\t\t<div className=\"cta-wrapper mb-15\">\r\n\t\t\t\t\t\t\t\t<div className=\"cta-img\">\r\n\t\t\t\t\t\t\t\t\t{/* <img src={require(\"../../../public/assets/img/shape/3.png\")} alt=\"shape\"/> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<div className=\"cta-text\">\r\n\t\t\t\t\t\t\t\t\t<h1>Visit Our Zomata Organic</h1>\r\n\t\t\t\t\t\t\t\t\t<p>\r\n\t\t\t\t\t\t\t\t\t\tLorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor\r\n\t\t\t\t\t\t\t\t\t\tincididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam quis nostrud\r\n\t\t\t\t\t\t\t\t\t\texercitation ullamco laboris nisi ut aliquie.\r\n\t\t\t\t\t\t\t\t\t</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"col-xl-4 col-lg-4 col-md-4\">\r\n\t\t\t\t\t\t\t<div className=\"cta-button mb-15 text-md-right\">\r\n\t\t\t\t\t\t\t\t{/* <Link href=\"/about\" as=\"/about\" >\r\n\t\t\t\t\t\t\t\t\t<a className=\"btn\">Visit Now</a>\r\n\t\t\t\t\t\t\t\t</Link> */}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default H1CtaSection;",{"ruleId":"201","severity":1,"message":"202","line":6,"column":124,"nodeType":"203","messageId":"204","endLine":6,"endColumn":148},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","replacedBy":"208"},{"ruleId":"205","replacedBy":"209"},{"ruleId":"207","replacedBy":"210"},{"ruleId":"201","severity":1,"message":"211","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"212","line":5,"column":74,"nodeType":"203","messageId":"204","endLine":5,"endColumn":88},{"ruleId":"201","severity":1,"message":"213","line":5,"column":101,"nodeType":"203","messageId":"204","endLine":5,"endColumn":116},{"ruleId":"201","severity":1,"message":"202","line":5,"column":118,"nodeType":"203","messageId":"204","endLine":5,"endColumn":142},{"ruleId":"205","replacedBy":"214"},{"ruleId":"207","replacedBy":"215"},{"ruleId":"201","severity":1,"message":"216","line":4,"column":38,"nodeType":"203","messageId":"204","endLine":4,"endColumn":41},{"ruleId":"201","severity":1,"message":"217","line":4,"column":13,"nodeType":"203","messageId":"204","endLine":4,"endColumn":26},{"ruleId":"201","severity":1,"message":"218","line":8,"column":29,"nodeType":"203","messageId":"204","endLine":8,"endColumn":36},{"ruleId":"219","severity":1,"message":"220","line":146,"column":49,"nodeType":"221","endLine":146,"endColumn":89},{"ruleId":"205","replacedBy":"222"},{"ruleId":"207","replacedBy":"223"},{"ruleId":"201","severity":1,"message":"218","line":8,"column":35,"nodeType":"203","messageId":"204","endLine":8,"endColumn":42},{"ruleId":"201","severity":1,"message":"224","line":9,"column":8,"nodeType":"203","messageId":"204","endLine":9,"endColumn":13},{"ruleId":"201","severity":1,"message":"218","line":7,"column":29,"nodeType":"203","messageId":"204","endLine":7,"endColumn":36},{"ruleId":"219","severity":1,"message":"220","line":121,"column":15,"nodeType":"221","endLine":121,"endColumn":59},{"ruleId":"205","replacedBy":"225"},{"ruleId":"207","replacedBy":"226"},{"ruleId":"205","replacedBy":"227"},{"ruleId":"207","replacedBy":"228"},{"ruleId":"205","replacedBy":"229"},{"ruleId":"207","replacedBy":"230"},{"ruleId":"201","severity":1,"message":"216","line":4,"column":38,"nodeType":"203","messageId":"204","endLine":4,"endColumn":41},{"ruleId":"201","severity":1,"message":"217","line":4,"column":13,"nodeType":"203","messageId":"204","endLine":4,"endColumn":26},{"ruleId":"201","severity":1,"message":"231","line":8,"column":10,"nodeType":"203","messageId":"204","endLine":8,"endColumn":19},{"ruleId":"201","severity":1,"message":"218","line":8,"column":35,"nodeType":"203","messageId":"204","endLine":8,"endColumn":42},{"ruleId":"201","severity":1,"message":"232","line":11,"column":8,"nodeType":"203","messageId":"204","endLine":11,"endColumn":24},{"ruleId":"233","severity":1,"message":"234","line":74,"column":159,"nodeType":"235","messageId":"236","endLine":74,"endColumn":188},{"ruleId":"201","severity":1,"message":"237","line":171,"column":33,"nodeType":"203","messageId":"204","endLine":171,"endColumn":40},{"ruleId":"238","severity":1,"message":"239","line":200,"column":37,"nodeType":"235","messageId":"240","endLine":200,"endColumn":39},{"ruleId":"219","severity":1,"message":"220","line":283,"column":45,"nodeType":"221","endLine":283,"endColumn":85},{"ruleId":"241","severity":1,"message":"242","line":383,"column":9,"nodeType":"243","endLine":383,"endColumn":20},{"ruleId":"238","severity":1,"message":"239","line":103,"column":46,"nodeType":"235","messageId":"240","endLine":103,"endColumn":48},{"ruleId":"201","severity":1,"message":"244","line":115,"column":17,"nodeType":"203","messageId":"204","endLine":115,"endColumn":24},{"ruleId":"219","severity":1,"message":"220","line":125,"column":49,"nodeType":"221","endLine":125,"endColumn":93},{"ruleId":"201","severity":1,"message":"245","line":3,"column":10,"nodeType":"203","messageId":"204","endLine":3,"endColumn":16},{"ruleId":"205","replacedBy":"246"},{"ruleId":"207","replacedBy":"247"},{"ruleId":"201","severity":1,"message":"248","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},{"ruleId":"201","severity":1,"message":"249","line":2,"column":16,"nodeType":"203","messageId":"204","endLine":2,"endColumn":22},{"ruleId":"201","severity":1,"message":"250","line":2,"column":34,"nodeType":"203","messageId":"204","endLine":2,"endColumn":37},{"ruleId":"201","severity":1,"message":"216","line":2,"column":38,"nodeType":"203","messageId":"204","endLine":2,"endColumn":41},{"ruleId":"201","severity":1,"message":"211","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"251","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":14},{"ruleId":"201","severity":1,"message":"252","line":9,"column":11,"nodeType":"203","messageId":"204","endLine":9,"endColumn":20},{"ruleId":"201","severity":1,"message":"251","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":14},"no-unused-vars","'DASHBOARD_NOT_ADDED_PATH' is defined but never used.","Identifier","unusedVar","no-native-reassign",["253"],"no-negated-in-lhs",["254"],["253"],["254"],"'Component' is defined but never used.","'HOME_PAGE_PATH' is defined but never used.","'WIFI_SETUP_PATH' is defined but never used.",["253"],["254"],"'Row' is defined but never used.","'promptActions' is defined but never used.","'Spinner' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["253"],["254"],"'axios' is defined but never used.",["253"],["254"],["253"],["254"],["253"],["254"],"'Container' is defined but never used.","'CircularProgress' is defined but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'all'.","ArrowFunctionExpression","unsafeRefs","'newDate' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'message' is assigned a value but never used.","'Search' is defined but never used.",["253"],["254"],"'Form' is defined but never used.","'Button' is defined but never used.","'Col' is defined but never used.","'Link' is defined but never used.","'openModal' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]