[{"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\App.js":"1","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\index.js":"2","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Constants\\const.js":"3","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\NavigationBar\\NavigationBar.js":"4","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Login\\Login.js":"5","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Dashboard\\Dashboard.js":"6","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Wifi\\Wifi.js":"7","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardFilters\\DashboardFilters.js":"8","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\loadingReducer.js":"9","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\loadingActions.js":"10","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\UtilityFunctions\\functions.js":"11","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\actionTypes.js":"12","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\promptReducer.js":"13","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\mainActions.js":"14","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\store.js":"15","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\ErrorBoundary\\ErrorBoundary.js":"16","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\mainReducer.js":"17","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Register\\Register.js":"18","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Settings\\Settings.js":"19","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\promptActions.js":"20","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Prompt\\Prompt.js":"21","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardNotAdded\\DashboardNotAdded.js":"22","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Axios\\config.js":"23"},{"size":1909,"mtime":1608128790724,"results":"24","hashOfConfig":"25"},{"size":728,"mtime":1608150355467,"results":"26","hashOfConfig":"25"},{"size":471,"mtime":1608318844678,"results":"27","hashOfConfig":"25"},{"size":2674,"mtime":1608211865310,"results":"28","hashOfConfig":"25"},{"size":2278,"mtime":1608169311140,"results":"29","hashOfConfig":"25"},{"size":9643,"mtime":1608167990579,"results":"30","hashOfConfig":"25"},{"size":5123,"mtime":1608169275213,"results":"31","hashOfConfig":"25"},{"size":5655,"mtime":1608168005129,"results":"32","hashOfConfig":"25"},{"size":479,"mtime":1607030800783,"results":"33","hashOfConfig":"25"},{"size":285,"mtime":1607030791248,"results":"34","hashOfConfig":"25"},{"size":979,"mtime":1608210399905,"results":"35","hashOfConfig":"25"},{"size":271,"mtime":1608149789469,"results":"36","hashOfConfig":"25"},{"size":1655,"mtime":1607026048286,"results":"37","hashOfConfig":"25"},{"size":4159,"mtime":1608220544931,"results":"38","hashOfConfig":"25"},{"size":466,"mtime":1607026054680,"results":"39","hashOfConfig":"25"},{"size":535,"mtime":1607030732492,"results":"40","hashOfConfig":"25"},{"size":673,"mtime":1608150735156,"results":"41","hashOfConfig":"25"},{"size":7015,"mtime":1608219583739,"results":"42","hashOfConfig":"25"},{"size":6571,"mtime":1608212109051,"results":"43","hashOfConfig":"25"},{"size":453,"mtime":1608148768074,"results":"44","hashOfConfig":"25"},{"size":1449,"mtime":1607553690894,"results":"45","hashOfConfig":"25"},{"size":4434,"mtime":1608214437632,"results":"46","hashOfConfig":"25"},{"size":648,"mtime":1608212305561,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1wiime4",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\App.js",[],["101","102"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\index.js",[],["103","104"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Constants\\const.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\NavigationBar\\NavigationBar.js",["105"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Login\\Login.js",["106"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Dashboard\\Dashboard.js",["107","108","109"],"import React,{Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport * as promptActions from '../../Store/Actions/promptActions'\r\nimport * as loadingActions from '../../Store/Actions/loadingActions'\r\nimport { LOGIN_PATH } from '../../Constants/const';\r\nimport { getCurrentUser } from '../../UtilityFunctions/functions';\r\nimport { Container,Dropdown,Table,Spinner } from 'react-bootstrap';\r\nimport axios from '../../Axios/config'\r\nimport './dashboard.scss'\r\nimport { finishedLoading } from '../../Store/Actions/loadingActions';\r\n\r\nclass Dashboard extends Component {\r\n    state = {\r\n        products: [],\r\n        // productsNotAdded: [],\r\n        shufersalTotal: 0,\r\n        ramiLevyTotal: 0,\r\n        image: '',\r\n        days: 30,\r\n        shufersalTotalNotComparison:0,\r\n        ramiLevyTotalNotComparison: 0\r\n        }\r\n\r\n    componentDidMount = async () => {\r\n        // axios.get('https://chp.co.il/autocompletion/product_extended?term=8717163647226').then(data=> console.log(data.data[0].value))\r\n        if (!this.props.loggedIn) {\r\n            if (getCurrentUser()) {\r\n                this.props.setLoggedIn()\r\n                this.loadData(this.state.days)\r\n            }\r\n            else {\r\n                this.props.history.push(LOGIN_PATH)\r\n            }\r\n        }\r\n        else{\r\n            this.loadData(this.state.days)\r\n        }\r\n    }\r\n    loadData = async (days) => {\r\n        this.props.load()\r\n        const shufersalTotalPrice = await axios.post('/products/total', {email:getCurrentUser().email,number:days,isShufersal: true})\r\n        const ramiLevyTotalPrice = await axios.post('/products/total', {email:getCurrentUser().email,number:days,isShufersal: false})\r\n        const filteredShufersal = shufersalTotalPrice.data.filter(current => current._id.selection === \"shufersalPrice\")\r\n        const filteredRamiLevy = ramiLevyTotalPrice.data.filter(current => current._id.selection === \"ramiLevyPrice\")\r\n        if(filteredShufersal.length > 0 && filteredRamiLevy.length >0){\r\n          this.setState({shufersalTotalNotComparison: filteredShufersal[0].price})\r\n          this.setState({ramiLevyTotalNotComparison: filteredRamiLevy[0].price})  \r\n        }\r\n        axios.post('/products/', {email: getCurrentUser().email,number:days}).then(data => {\r\n            this.setState({products: data.data});\r\n            let y = 0, m = 0;\r\n            for(let x in data.data){\r\n                if(data.data[x].shufersalPrice!=='לא נמצא' && data.data[x].ramiLevyPrice!=='לא נמצא'){\r\n                    y += data.data[x].shufersalPrice;\r\n                    m += data.data[x].ramiLevyPrice;\r\n                }\r\n            }\r\n            this.setState({shufersalTotal: y})\r\n            this.setState({ramiLevyTotal: m})\r\n            this.props.finishedLoading()\r\n    })\r\n        // axios.get('/products/notAdded/' + getCurrentUser().email).then(data => {\r\n        //     this.setState({productsNotAdded: data.data})\r\n\r\n        //   })\r\n    }\r\n\r\n    handleDropdownChange = async (days) => {\r\n        this.setState({days:days})\r\n        this.loadData(days)\r\n    }\r\n\r\n    render(){\r\n      console.log(this.state.products)\r\n        if(this.props.loading)\r\n            return <Spinner animation=\"border\" className=\"spinner\" />\r\n        if(this.state.products === null || this.state.products === undefined || this.state.products.length === 0)\r\n            return <Container>\r\n            <h1 style={{textAlign:\"right\"}}>מוצרים שסרקת</h1>\r\n            <h1 className=\"table-style-image margin-top-container\">לא נסרקו עדיין מוצרים</h1>\r\n            </Container>\r\n            \r\n        return(\r\n            <Container className=\"margin-top-container\">\r\n            <h1 className=\"align-right\">מוצרים שסרקת</h1>\r\n            <Dropdown>\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  לפי    {this.state.days} ימים אחרונים\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(7)}>לפי 7 ימים אחרונים</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(30)}>לפי 30 ימים אחרונים </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(365)}>לפי 365 ימים אחרונים</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <p className=\"align-right\">לאיזו עגלה המוצר נכנס = 🛒</p>\r\n\r\n                                <Table bordered hover className=\"table-style\">\r\n  <thead>\r\n    <tr>\r\n      <th className=\"table-style-image\">ניתן לחסוך</th>\r\n      <th className=\"table-style-image\">שופרסל</th>\r\n      <th className=\"table-style-image\">רמי לוי</th>\r\n      <th className=\"table-style-image\">תמונה</th>\r\n      <th>שם מוצר</th>\r\n      <th className=\"d-none d-lg-table-cell\">תאריך</th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.products.map((current) => {\r\n          const date = new Date(current.creationDate);\r\n          const newDate = date.toLocaleDateString('he-IS');\r\n        //   const greater = current.shufersalPrice < current.ramiLevyPrice ? 'shufersal' : 'ramiLevy'\r\n          //greater === 'shufersal' ? 'red-style' : 'green-style'\r\n          const isSelectionShufersal = current.selection === 'Shufersal' ? true : false;\r\n          const difference = (Math.round((current.shufersalPrice-current.ramiLevyPrice) * 100) / 100).toFixed(2);\r\n          let message = ''\r\n          if(isSelectionShufersal){\r\n            if(difference>0){\r\n                message = `₪ ${difference} ניתן לחסוך ברמי לוי`\r\n            }\r\n            \r\n          }\r\n          else{\r\n            if(difference<0){\r\n                message = `₪ ${difference} ניתן לחסוך בשופרסל`\r\n            }\r\n            \r\n          }\r\n          return <tr key={current._id}>\r\n          <td className='table-style-image'>{message} </td>\r\n          <td className={(!isSelectionShufersal && 'gray-style') + ' table-style-image'}>{current.shufersalPrice} {current.shufersalPrice !=='לא נמצא' && '₪'} {isSelectionShufersal && <div>🛒</div>}</td>\r\n      <td className={(isSelectionShufersal && 'gray-style') + ' table-style-image'}>{current.ramiLevyPrice} {current.ramiLevyPrice !=='לא נמצא' && '₪'} {!isSelectionShufersal && <div>🛒</div>}</td>\r\n          <td className=\"table-style-image\"><img height=\"50px\" src={current.image}/></td>\r\n          <td>{current.name}</td>\r\n          <td className=\"d-none d-lg-table-cell\">{newDate}</td>\r\n\r\n        </tr>\r\n                      \r\n      })}\r\n        <tr key='totalPrice' style={{borderTop: \"2px solid black\"}}>\r\n          <td></td>\r\n          <td>{((Math.round(this.state.shufersalTotalNotComparison * 100) / 100).toFixed(2))}₪</td>\r\n          <td>{((Math.round(this.state.ramiLevyTotalNotComparison * 100) / 100).toFixed(2))}₪</td>\r\n          <td>מחיר כולל לפי סל</td>\r\n        </tr>\r\n\r\n        \r\n  </tbody>\r\n</Table>\r\n\r\n<Table bordered hover className=\"table-style-image\">\r\n  <thead>\r\n    <tr>\r\n      <th>ניתן לחסוך</th>\r\n      <th>שופרסל</th>\r\n      <th>רמי לוי</th>\r\n      <th></th>\r\n\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n\r\n\r\n<tr key='totalComparison'>\r\n    <td>{(Math.round((Math.abs(this.state.ramiLevyTotal-this.state.shufersalTotal)) * 100) / 100).toFixed(2)} ₪ :הפרש מחיר בין הסלים</td>\r\n\r\n          <td className={this.state.shufersalTotal < this.state.ramiLevyTotal ? 'green-style' : 'red-style'}>{(Math.round(this.state.shufersalTotal * 100) / 100).toFixed(2)} ₪</td>\r\n          <td className={this.state.shufersalTotal > this.state.ramiLevyTotal ? 'green-style' : 'red-style'}>{(Math.round(this.state.ramiLevyTotal * 100) / 100).toFixed(2)} ₪</td>\r\n          <td> השוואת סלים בין מוצרים זהים</td>\r\n        </tr>\r\n</tbody>\r\n\r\n</Table>    \r\n{/* <h1 style={{textAlign:\"right\"}}>מוצרים שלא נכנסו לעגלה</h1>\r\n<Table striped bordered hover variant=\"dark\" className=\"table-style\">\r\n  <thead>\r\n    <tr>\r\n      <th>תמונה</th>\r\n      <th>שם מוצר</th>\r\n      <th>תאריך</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.productsNotAdded.map(current => {\r\n                    const date = new Date(current.creationDate);\r\n                    const newDate = date.toLocaleDateString('he-IS');          \r\n          return <tr key={current._id}>\r\n                        <td><img height=\"50px\" src={current.image}/></td>\r\n          <td>{current.name}</td>\r\n          <td>{newDate}</td>\r\n\r\n        </tr>\r\n      })}\r\n    \r\n  </tbody>\r\n</Table> */}\r\n\r\n\r\n</Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.main.currentUser,\r\n        loggedIn: state.main.loggedIn,\r\n        loading: state.loading.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCurrentUser: (user) => dispatch(mainActions.updateUsername(user)),\r\n        setLoggedIn: () => dispatch(mainActions.loggedIn()),\r\n        load: () => dispatch(loadingActions.loading()),\r\n        finishedLoading: () => dispatch(loadingActions.finishedLoading()),\r\n        logIn: (email, password) => dispatch(mainActions.logIn(email, password))\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);",["110","111"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Wifi\\Wifi.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardFilters\\DashboardFilters.js",["112"],"import React,{Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport * as loadingActions from '../../Store/Actions/loadingActions'\r\nimport { LOGIN_PATH } from '../../Constants/const';\r\nimport { getCurrentUser } from '../../UtilityFunctions/functions';\r\nimport { Container,Table,Dropdown,Spinner,Row } from 'react-bootstrap';\r\nimport axios from '../../Axios/config'\r\nimport './dashboardFilters.scss'\r\nclass Dashboard extends Component {\r\n    state = {\r\n        products: [],\r\n        days: 30,\r\n        totalPriceLocal: 0,\r\n        filter:'price'\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        // axios.get('https://chp.co.il/autocompletion/product_extended?term=8717163647226').then(data=> console.log(data.data[0].value))\r\n        if (!this.props.loggedIn) {\r\n            if (getCurrentUser()) {\r\n                this.props.setLoggedIn()\r\n                this.loadData(this.state.days)\r\n            }\r\n            else {\r\n                this.props.history.push(LOGIN_PATH)\r\n            }\r\n        }\r\n        else{\r\n            this.loadData(this.state.days)\r\n        }\r\n    }\r\n    loadData = (days,filter) => {\r\n        this.props.load()\r\n        const isShufersal = this.props.currentUser.selection === 'Shufersal' ? true : false;\r\n        console.log(this.props.currentUser.selection + isShufersal)\r\n        axios.post('/products/agg',{email:getCurrentUser().email,number:days, isShufersal:isShufersal,filter:filter}).then(data=>{\r\n            this.setState({products:data.data})\r\n            let x = 0;\r\n            for(let i = 0; i<data.data.length; i++){\r\n                x+= data.data[i].price;\r\n            }\r\n            this.setState({totalPriceLocal:x})\r\n\r\n            this.props.finishedLoading()\r\n        })\r\n    }\r\n\r\n    //all through currentUser in Redux!! no local storage!! only for password and username\r\n\r\n    handleDropdownChange = async (days) => {\r\n        this.setState({days:days})\r\n        this.loadData(days)\r\n    }\r\n\r\n    handleDropdownChangeFilters = async (data) => {\r\n        this.setState({filter:data})\r\n        this.loadData(this.state.days,data)\r\n    }\r\n    render(){\r\n        if(this.props.loading)\r\n            return <Spinner animation=\"border\" className=\"spinner\" />\r\n        if(this.state.products === null || this.state.products === undefined || this.state.products.length === 0)\r\n            return <Container>\r\n                <h1 style={{textAlign:\"right\"}}>נתוני צריכה</h1>\r\n            <h1 className=\"align-none\">לא נסרקו עדיין מוצרים</h1>\r\n                </Container>\r\n        return(\r\n            <Container className=\"margin-top-container\">\r\n             \r\n<h1 style={{textAlign:\"right\"}}>נתוני צריכה</h1>\r\n<Row>\r\n<Dropdown>\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  לפי    {this.state.days} ימים אחרונים\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(7)}>לפי 7 ימים אחרונים</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(30)}>לפי 30 ימים אחרונים </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(365)}>לפי 365 ימים אחרונים</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <Dropdown className=\"dropdown-style\">\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  {this.state.filter === 'price' ? 'מחיר כולל' : 'כמות'}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChangeFilters('price')}>מחיר כולל</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChangeFilters('amount')}>כמות </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    </Row>\r\n\r\n<Table bordered hover className=\"table-style\">\r\n  <thead>\r\n    <tr>\r\n    <th>מחיר כולל</th>\r\n    <th>כמות</th>\r\n\r\n      <th>תמונה</th>\r\n      <th>שם מוצר</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.products.map(current => {\r\n          return <tr key={current._id.barcode}>\r\n                        <td>{current.price}₪</td>\r\n                        <td>{current.total}</td>\r\n\r\n          <td><img height=\"50px\" src={current._id.image}/></td>\r\n          <td>{current._id.name}</td>\r\n\r\n        </tr>\r\n      })}\r\n    <tr key={'total'}>\r\n          <td>{(Math.round((this.state.totalPriceLocal) * 100) / 100).toFixed(2)} ₪</td>\r\n\r\n        </tr>\r\n  </tbody>\r\n</Table>\r\n</Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.main.currentUser,\r\n        loggedIn: state.main.loggedIn,\r\n        loading: state.loading.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCurrentUser: (user) => dispatch(mainActions.updateUsername(user)),\r\n        setLoggedIn: () => dispatch(mainActions.loggedIn()),\r\n        load: () => dispatch(loadingActions.loading()),\r\n        finishedLoading: () => dispatch(loadingActions.finishedLoading()),\r\n        logIn: (email, password) => dispatch(mainActions.logIn(email, password))\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\loadingReducer.js",[],["113","114"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\loadingActions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\UtilityFunctions\\functions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\actionTypes.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\promptReducer.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\mainActions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\store.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\ErrorBoundary\\ErrorBoundary.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\mainReducer.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Register\\Register.js",["115"],"import React, { Component } from 'react'\r\nimport { Form, Button, Container,Col,Dropdown } from 'react-bootstrap';\r\nimport './register.scss'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport { connect } from 'react-redux'\r\nimport { DASHBOARD_PATH, LOGIN_PATH } from '../../Constants/const'\r\nimport axios from '../../Axios/config';\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        email: '',\r\n        password: '',\r\n        shufersalUsername: '',\r\n        shufersalPassword: '',\r\n        ramiLevyUsername: '',\r\n        ramiLevyPassword: '',\r\n        selection: 'Shufersal',\r\n        sound: true,\r\n        usernameWifi: '',\r\n        passwordWifi: '',\r\n        submitUsername: false,\r\n        submitPassword: false,\r\n    }\r\n\r\n    handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const {email,password,shufersalUsername,\r\n            shufersalPassword,ramiLevyUsername,ramiLevyPassword,\r\n            selection, sound,usernameWifi,passwordWifi} = this.state;\r\n        try{\r\n            await this.props.registerAll(email,password,shufersalUsername,shufersalPassword,ramiLevyUsername,ramiLevyPassword,selection,sound,usernameWifi,passwordWifi)\r\n            // await this.props.register(email,password)\r\n            // await this.props.updateSettings(shufersalUsername,shufersalPassword,ramiLevyUsername,ramiLevyPassword,selection,sound)\r\n            // await this.props.updateWifiDetails(usernameWifi,passwordWifi)    \r\n        }\r\n        catch(error){\r\n            console.log(error)\r\n        }\r\n        if (this.props.loggedIn) {\r\n            this.props.history.push(DASHBOARD_PATH);\r\n        }\r\n    }\r\n\r\n    handleChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container className=\"form app-background\">\r\n                <h1 style={{textAlign:\"right\"}}>הרשמה</h1>\r\n                <Form onSubmit={(e) => this.handleSubmit(e)} style={{textAlign:\"right\"}}>\r\n                <Col xs={12} lg={6} className=\"float-right\">\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>דואר אלקטרוני</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"הכנס דואר אלקטרוני\" name=\"email\" onChange={(e) => this.handleChange(e)} />\r\n                        \r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>סיסמה</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"הכנס סיסמה\" name=\"password\" onChange={(e) => this.handleChange(e)} />\r\n                    </Form.Group>\r\n                    <Dropdown>\r\n\r\n<Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\" className=\"margin-cart\">\r\n    {this.state.selection === 'Shufersal' ? 'שופרסל' : 'רמי לוי'}\r\n</Dropdown.Toggle>\r\nבחר עגלה\r\n\r\n<Dropdown.Menu className=\"margin-cart\">\r\n    <Dropdown.Item onClick={() => this.setState({ selection: 'Shufersal' })}>שופרסל</Dropdown.Item>\r\n    <Dropdown.Item onClick={() => this.setState({ selection: 'Rami Levy' })}>רמי לוי</Dropdown.Item>\r\n</Dropdown.Menu>\r\n</Dropdown>\r\n<div className=\"form-margin-top\">\r\n{this.state.selection === 'Shufersal' && <div>\r\n<Form.Group controlId=\"formBasicEmail\">\r\n<Form.Label>שופרסל אימייל</Form.Label>\r\n<Form.Control name=\"shufersalUsername\" type=\"email\" placeholder=\"הכנס מייל לשופרסל\" onChange={(e) => this.handleChange(e)} value={this.state.shufersalUsername} />\r\n</Form.Group>\r\n\r\n<Form.Group controlId=\"formBasicPassword\">\r\n<Form.Label>שופרסל סיסמה</Form.Label>\r\n<Form.Control name=\"shufersalPassword\" type=\"password\" placeholder=\"הכנס סיסמה לשופרסל\" onChange={(e) => this.handleChange(e)} value={this.state.shufersalPassword} />\r\n</Form.Group>\r\n</div>}\r\n\r\n{this.state.selection !== 'Shufersal' && \r\n<div>\r\n<Form.Group controlId=\"formBasicEmail\">\r\n<Form.Label>רמי לוי אימייל</Form.Label>\r\n<Form.Control name=\"ramiLevyUsername\" type=\"text\" placeholder=\"הכנס מייל לרמי לוי\" onChange={(e) => this.handleChange(e)} value={this.state.ramiLevyUsername} />\r\n</Form.Group>\r\n\r\n<Form.Group controlId=\"formBasicPassword\">\r\n<Form.Label>רמי לוי סיסמה</Form.Label>\r\n<Form.Control name=\"ramiLevyPassword\" type=\"password\" placeholder=\"הכנס סיסמה לרמי לוי\" onChange={(e) => this.handleChange(e)} value={this.state.ramiLevyPassword} />\r\n</Form.Group>\r\n</div>\r\n}\r\n\r\n\r\n<Form.Group controlId=\"formBasicCheckbox\" className=\"margin-sound\">\r\n<Form.Check name=\"sound\" type=\"checkbox\" label=\"תגובות אודיו מהמכשיר\" onChange={(e) => this.setState({ sound: e.target.checked })} checked={this.state.sound} />\r\n</Form.Group>\r\n</div>\r\n\r\n<Form.Group controlId=\"formBasicEmail\" className=\"align-right\">\r\n                        <Form.Label>Wifiשם משתמש ל</Form.Label>\r\n                        <Form.Control name=\"usernameWifi\" type=\"text\" placeholder=\"wifiהכנס שם משתמש ל\" onChange={(e) => this.handleChange(e)} value={this.state.usernameWifi} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\" className=\"align-right\">\r\n                    <Form.Label>Wifiסיסמה ל</Form.Label>\r\n                        <Form.Control name=\"passwordWifi\" type=\"password\" placeholder=\"wifiהכנס סיסמה ל\" onChange={(e) => this.handleChange(e)} value={this.state.passwordWifi} />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        הרשמה\r\n              </Button>\r\n              <p> יש לך כבר חשבון? לחץ<span onClick={() => this.props.history.push(LOGIN_PATH)} className=\"register-link\"> כאן </span> כדי להתחבר</p>\r\n            \r\n\r\n</Col>\r\n\r\n                </Form>\r\n\r\n        \r\n\r\n            </Container>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedIn: state.main.loggedIn\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        register: (email, password) => dispatch(mainActions.register(email, password)),\r\n        updateSettings: (shufersalUsername,shufersalPassword,ramiLevyUsername,ramiLevyPassword,selection,sound) => dispatch(mainActions.updateSettings(shufersalUsername,shufersalPassword,ramiLevyUsername,ramiLevyPassword,selection,sound)),\r\n        updateWifiDetails: (username, password) => dispatch(mainActions.updateWifiDetails(username, password)),\r\n        registerAll: (email,password,shufersalUsername,shufersalPassword,ramiLevyUsername,ramiLevyPassword,selection,sound,usernameWifi,passwordWifi) => dispatch(mainActions.registerAll(email,password,shufersalUsername,shufersalPassword,ramiLevyUsername,ramiLevyPassword,selection,sound,usernameWifi,passwordWifi)),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Settings\\Settings.js",["116"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\promptActions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Prompt\\Prompt.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardNotAdded\\DashboardNotAdded.js",["117"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Axios\\config.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"128","line":4,"column":38,"nodeType":"126","messageId":"127","endLine":4,"endColumn":41},{"ruleId":"124","severity":1,"message":"129","line":4,"column":13,"nodeType":"126","messageId":"127","endLine":4,"endColumn":26},{"ruleId":"124","severity":1,"message":"130","line":11,"column":10,"nodeType":"126","messageId":"127","endLine":11,"endColumn":25},{"ruleId":"131","severity":1,"message":"132","line":137,"column":45,"nodeType":"133","endLine":137,"endColumn":85},{"ruleId":"118","replacedBy":"134"},{"ruleId":"120","replacedBy":"135"},{"ruleId":"131","severity":1,"message":"132","line":113,"column":15,"nodeType":"133","endLine":113,"endColumn":59},{"ruleId":"118","replacedBy":"136"},{"ruleId":"120","replacedBy":"137"},{"ruleId":"124","severity":1,"message":"138","line":7,"column":8,"nodeType":"126","messageId":"127","endLine":7,"endColumn":13},{"ruleId":"124","severity":1,"message":"139","line":4,"column":10,"nodeType":"126","messageId":"127","endLine":4,"endColumn":20},{"ruleId":"131","severity":1,"message":"132","line":80,"column":29,"nodeType":"133","endLine":80,"endColumn":69},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],["140"],["141"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Row' is defined but never used.","'promptActions' is defined but never used.","'finishedLoading' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["140"],["141"],["140"],["141"],"'axios' is defined but never used.","'LOGIN_PATH' is defined but never used.","no-global-assign","no-unsafe-negation"]