[{"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\App.js":"1","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\index.js":"2","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Constants\\const.js":"3","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\NavigationBar\\NavigationBar.js":"4","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Login\\Login.js":"5","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Dashboard\\Dashboard.js":"6","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Wifi\\Wifi.js":"7","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardFilters\\DashboardFilters.js":"8","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\loadingReducer.js":"9","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\loadingActions.js":"10","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\UtilityFunctions\\functions.js":"11","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\actionTypes.js":"12","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\promptReducer.js":"13","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\mainActions.js":"14","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\store.js":"15","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\ErrorBoundary\\ErrorBoundary.js":"16","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\mainReducer.js":"17","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Register\\Register.js":"18","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Settings\\Settings.js":"19","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\promptActions.js":"20","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Prompt\\Prompt.js":"21","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardNotAdded\\DashboardNotAdded.js":"22"},{"size":1909,"mtime":1607609204187,"results":"23","hashOfConfig":"24"},{"size":562,"mtime":1607030821346,"results":"25","hashOfConfig":"24"},{"size":482,"mtime":1607954596648,"results":"26","hashOfConfig":"24"},{"size":2147,"mtime":1607622560048,"results":"27","hashOfConfig":"24"},{"size":2022,"mtime":1607180866073,"results":"28","hashOfConfig":"24"},{"size":7636,"mtime":1607953862691,"results":"29","hashOfConfig":"24"},{"size":5110,"mtime":1607953938108,"results":"30","hashOfConfig":"24"},{"size":5704,"mtime":1607641288790,"results":"31","hashOfConfig":"24"},{"size":479,"mtime":1607030800783,"results":"32","hashOfConfig":"24"},{"size":285,"mtime":1607030791248,"results":"33","hashOfConfig":"24"},{"size":742,"mtime":1607030814211,"results":"34","hashOfConfig":"24"},{"size":462,"mtime":1607030809546,"results":"35","hashOfConfig":"24"},{"size":1655,"mtime":1607026048286,"results":"36","hashOfConfig":"24"},{"size":4680,"mtime":1607632895837,"results":"37","hashOfConfig":"24"},{"size":466,"mtime":1607026054680,"results":"38","hashOfConfig":"24"},{"size":535,"mtime":1607030732492,"results":"39","hashOfConfig":"24"},{"size":839,"mtime":1607022832811,"results":"40","hashOfConfig":"24"},{"size":2210,"mtime":1607180874497,"results":"41","hashOfConfig":"24"},{"size":6521,"mtime":1607953902754,"results":"42","hashOfConfig":"24"},{"size":2093,"mtime":1607030796199,"results":"43","hashOfConfig":"24"},{"size":1449,"mtime":1607553690894,"results":"44","hashOfConfig":"24"},{"size":4075,"mtime":1607954521635,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wiime4",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\App.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\index.js",[],["96","97"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Constants\\const.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\NavigationBar\\NavigationBar.js",["98","99"],"import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Navbar, Nav, Button,NavDropdown } from 'react-bootstrap';\r\nimport { DASHBOARD_PATH, WIFI_SETUP_PATH, DASHBOARD_NOT_ADDED_PATH,DASHBOARD_FILTERS_PATH, SETTINGS_PATH } from '../../Constants/const'\r\n\r\nclass NavigationBar extends Component {\r\n    // state = {\r\n    //     show: false\r\n    // } \r\n    // showDropdown = (e)=>{\r\n    //     this.setState({show:true});\r\n    // }\r\n    // hideDropdown = e => {\r\n    //     this.setState({show:false});\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" >\r\n                <Navbar.Brand as={Link} to={DASHBOARD_PATH}>Scanly</Navbar.Brand>\r\n\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"ml-auto\">\r\n                    <Nav.Link as={Link} to={SETTINGS_PATH}>\r\n                            הגדרות </Nav.Link>\r\n                            <Nav.Link as={Link} to={WIFI_SETUP_PATH}>Wifi הגדרת</Nav.Link>\r\n                            <Nav.Link as={Link} to={DASHBOARD_FILTERS_PATH}>נתוני צריכה</Nav.Link>\r\n                            <Nav.Link as={Link} to={DASHBOARD_NOT_ADDED_PATH}>מוצרים שלא נוספו</Nav.Link>\r\n\r\n                        <Nav.Link as={Link} to={DASHBOARD_PATH}>מוצרים</Nav.Link>\r\n                        {/* <NavDropdown title=\"המוצרים שלי\" id=\"collasible-nav-dropdown\" show={this.state.show}\r\n   onMouseEnter={this.showDropdown} \r\n   onMouseLeave={this.hideDropdown}>\r\n        <NavDropdown.Item as={Link} to={DASHBOARD_FILTERS_PATH}>נתוני צריכה</NavDropdown.Item>\r\n        <NavDropdown.Item as={Link} to={DASHBOARD_NOT_ADDED_PATH}>מוצרים שלא נוספו</NavDropdown.Item>\r\n        <NavDropdown.Item as={Link} to={DASHBOARD_PATH}>מוצרים</NavDropdown.Item>\r\n      </NavDropdown> */}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Navbar>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default NavigationBar;\r\n\r\n","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Login\\Login.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Dashboard\\Dashboard.js",["100","101","102","103","104"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Wifi\\Wifi.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardFilters\\DashboardFilters.js",["105"],"import React,{Component} from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport * as loadingActions from '../../Store/Actions/loadingActions'\r\nimport { LOGIN_PATH } from '../../Constants/const';\r\nimport { getCurrentUser } from '../../UtilityFunctions/functions';\r\nimport { Container,Table,Dropdown,Spinner,Row } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport './dashboardFilters.scss'\r\nclass Dashboard extends Component {\r\n    state = {\r\n        products: [],\r\n        days: 30,\r\n        totalPriceLocal: 0,\r\n        filter:'price'\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        // axios.get('https://chp.co.il/autocompletion/product_extended?term=8717163647226').then(data=> console.log(data.data[0].value))\r\n        if (!this.props.loggedIn) {\r\n            if (getCurrentUser()) {\r\n                await this.props.logIn(getCurrentUser().email,getCurrentUser().password)\r\n                this.props.setLoggedIn()\r\n                this.loadData(this.state.days)\r\n            }\r\n            else {\r\n                this.props.history.push(LOGIN_PATH)\r\n            }\r\n        }\r\n        else{\r\n            await this.props.logIn(getCurrentUser().email,getCurrentUser().password)\r\n            this.loadData(this.state.days)\r\n        }\r\n    }\r\n    loadData = (days,filter) => {\r\n        this.props.load()\r\n        const isShufersal = this.props.currentUser.selection === 'Shufersal' ? true : false;\r\n        console.log(this.props.currentUser.selection + isShufersal)\r\n        axios.post('/products/agg',{email:getCurrentUser().email,number:days, isShufersal:isShufersal,filter:filter}).then(data=>{\r\n            this.setState({products:data.data})\r\n            let x = 0;\r\n            for(let i = 0; i<data.data.length; i++){\r\n                x+= data.data[i].price;\r\n            }\r\n            this.setState({totalPriceLocal:x})\r\n\r\n            console.log(data.data)\r\n            this.props.finishedLoading()\r\n        })\r\n    }\r\n\r\n    //all through currentUser in Redux!! no local storage!! only for password and username\r\n\r\n    handleDropdownChange = async (days) => {\r\n        this.setState({days:days})\r\n        this.loadData(days)\r\n    }\r\n\r\n    handleDropdownChangeFilters = async (data) => {\r\n        this.setState({filter:data})\r\n        this.loadData(this.state.days,data)\r\n    }\r\n    render(){\r\n        if(this.props.loading)\r\n            return <Spinner animation=\"border\" className=\"spinner\" />\r\n        return(\r\n            <Container className=\"margin-top-container\">\r\n             \r\n<h1 style={{textAlign:\"right\"}}>נתוני צריכה</h1>\r\n<Row>\r\n<Dropdown>\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  לפי    {this.state.days} ימים אחרונים\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(7)}>לפי 7 ימים אחרונים</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(30)}>לפי 30 ימים אחרונים </Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChange(365)}>לפי 365 ימים אחרונים</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n\r\n                    <Dropdown className=\"dropdown-style\">\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\">\r\n                  {this.state.filter === 'price' ? 'מחיר כולל' : 'כמות'}\r\n                        </Dropdown.Toggle>\r\n\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChangeFilters('price')}>מחיר כולל</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.handleDropdownChangeFilters('amount')}>כמות </Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    </Row>\r\n                    <p className=\"align-right\">נתונים לפי עגלה נוכחית: <b>{this.props.currentUser.selection === 'Shufersal' ? 'שופרסל' : 'רמי לוי'}</b></p>\r\n\r\n<Table bordered hover className=\"table-style\">\r\n  <thead>\r\n    <tr>\r\n    <th>מחיר כולל</th>\r\n    <th>כמות</th>\r\n\r\n      <th>תמונה</th>\r\n      <th>שם מוצר</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n      {this.state.products.map(current => {\r\n          return <tr key={current._id.barcode}>\r\n                        <td>{current.price}₪</td>\r\n                        <td>{current.total}</td>\r\n\r\n          <td><img height=\"50px\" src={current._id.image}/></td>\r\n          <td>{current._id.name}</td>\r\n\r\n        </tr>\r\n      })}\r\n    <tr key={'total'}>\r\n          <td>{(Math.round((this.state.totalPriceLocal) * 100) / 100).toFixed(2)} ₪</td>\r\n\r\n        </tr>\r\n  </tbody>\r\n</Table>\r\n</Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.main.currentUser,\r\n        loggedIn: state.main.loggedIn,\r\n        loading: state.loading.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCurrentUser: (user) => dispatch(mainActions.updateUsername(user)),\r\n        setLoggedIn: () => dispatch(mainActions.loggedIn()),\r\n        load: () => dispatch(loadingActions.loading()),\r\n        finishedLoading: () => dispatch(loadingActions.finishedLoading()),\r\n        logIn: (email, password) => dispatch(mainActions.logIn(email, password))\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);",["106","107"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\loadingReducer.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\loadingActions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\UtilityFunctions\\functions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\actionTypes.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\promptReducer.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\mainActions.js",[],["108","109"],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\store.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\ErrorBoundary\\ErrorBoundary.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Reducers\\mainReducer.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Register\\Register.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Settings\\Settings.js",["110"],"import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport { LOGIN_PATH } from '../../Constants/const';\r\nimport { getCurrentUser } from '../../UtilityFunctions/functions';\r\nimport { Form, Button, Dropdown, Container, Col } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport * as promptActions from '../../Store/Actions/promptActions'\r\nimport * as loadingActions from '../../Store/Actions/loadingActions'\r\nimport './settings.scss'\r\n\r\nclass Settings extends Component {\r\n    state = {\r\n        shufersalUsername: '',\r\n        shufersalPassword: '',\r\n        ramiLevyUsername: '',\r\n        ramiLevyPassword: '',\r\n        selection: 'Shufersal',\r\n        sound: false\r\n    }\r\n    componentDidMount = () => {\r\n        //load everything\r\n        this.props.load();\r\n        try{\r\n            axios.post('/details/' ,{email: getCurrentUser().email}).then(data => {\r\n                const user = data.data;\r\n                if(user.selection === '' || user.selection === undefined || user.selection === null)\r\n                    user.selection = 'Shufersal';\r\n                this.setState({\r\n                    shufersalUsername: user.shufersalUsername,\r\n                    shufersalPassword: user.shufersalPassword,\r\n                    ramiLevyUsername: user.ramiLevyUsername,\r\n                    ramiLevyPassword: user.ramiLevyPassword,\r\n                    selection: user.selection,\r\n                    sound: user.sound\r\n                });\r\n                \r\n        \r\n            })\r\n        }\r\n        catch(error)\r\n       {\r\n        this.props.openPrompt('תקלה','לא ניתן לבצע את הפעולה');\r\n       }\r\n       finally{\r\n        this.props.finishedLoading();\r\n       }\r\n        \r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault()\r\n        this.props.updateSettings(this.state.shufersalUsername,\r\n            this.state.shufersalPassword,\r\n            this.state.ramiLevyUsername,\r\n            this.state.ramiLevyPassword,\r\n            this.state.selection,\r\n            this.state.sound,\r\n        );\r\n    }\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n    render() {        \r\n        return (\r\n            <Container>\r\n                <Form onSubmit={this.onSubmit} className=\"align-right margin\">\r\n                    <Col xs={12} lg={6} className=\"float-right\">\r\n                    <Dropdown>\r\n\r\n                        <Dropdown.Toggle variant=\"dark\" id=\"dropdown-basic\" className=\"margin-cart\">\r\n                            {this.state.selection === 'Shufersal' ? 'שופרסל' : 'רמי לוי'}\r\n                        </Dropdown.Toggle>\r\n                        בחר עגלה\r\n\r\n                        <Dropdown.Menu className=\"margin-cart\">\r\n                            <Dropdown.Item onClick={() => this.setState({ selection: 'Shufersal' })}>שופרסל</Dropdown.Item>\r\n                            <Dropdown.Item onClick={() => this.setState({ selection: 'Rami Levy' })}>רמי לוי</Dropdown.Item>\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <div className=\"form-margin-top\">\r\n                        {this.state.selection === 'Shufersal' && <div>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>שופרסל אימייל</Form.Label>\r\n                        <Form.Control name=\"shufersalUsername\" type=\"text\" placeholder=\"Enter Shufersal Username\" onChange={(e) => this.onChange(e)} value={this.state.shufersalUsername} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>שופרסל סיסמה</Form.Label>\r\n                        <Form.Control name=\"shufersalPassword\" type=\"password\" placeholder=\"Enter Shufersal Password\" onChange={(e) => this.onChange(e)} value={this.state.shufersalPassword} />\r\n                    </Form.Group>\r\n                    </div>}\r\n                        \r\n                    {this.state.selection !== 'Shufersal' && \r\n                    <div>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>רמי לוי אימייל</Form.Label>\r\n                    <Form.Control name=\"ramiLevyUsername\" type=\"text\" placeholder=\"Enter Rami Levy Username\" onChange={(e) => this.onChange(e)} value={this.state.ramiLevyUsername} />\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId=\"formBasicPassword\">\r\n                    <Form.Label>רמי לוי סיסמה</Form.Label>\r\n                    <Form.Control name=\"ramiLevyPassword\" type=\"password\" placeholder=\"Enter Rami Levy Password\" onChange={(e) => this.onChange(e)} value={this.state.ramiLevyPassword} />\r\n                </Form.Group>\r\n                </div>\r\n                    }\r\n                    \r\n                   \r\n                    <Form.Group controlId=\"formBasicCheckbox\" className=\"margin-sound\">\r\n                        <Form.Check name=\"sound\" type=\"checkbox\" label=\"תגובות אודיו מהמכשיר\" onChange={(e) => this.setState({ sound: e.target.checked })} checked={this.state.sound} />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        שמור\r\n                    </Button>\r\n                    </div>\r\n                    </Col>\r\n                </Form>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.main.currentUser,\r\n        loggedIn: state.main.loggedIn,\r\n        loading: state.loading.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCurrentUser: (user) => dispatch(mainActions.updateUsername(user)),\r\n        setLoggedIn: () => dispatch(mainActions.loggedIn()),\r\n        updateSettings: (shufersalUsername, shufersalPassword, ramiLevyUsername, ramiLevyPassword, selection, sound) => dispatch(mainActions.updateSettings(shufersalUsername, shufersalPassword, ramiLevyUsername, ramiLevyPassword, selection, sound)),\r\n        openPrompt: (title, text) => dispatch(promptActions.openPrompt(title, text)),\r\n        load: () => dispatch(loadingActions.loading()),\r\n        finishedLoading: () => dispatch(loadingActions.finishedLoading()),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);","C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Store\\Actions\\promptActions.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\Prompt\\Prompt.js",[],"C:\\Users\\avivk\\Documents\\GitHub\\scanlyreal\\client\\src\\Components\\DashboardNotAdded\\DashboardNotAdded.js",["111"],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":3,"column":23,"nodeType":"118","messageId":"119","endLine":3,"endColumn":29},{"ruleId":"116","severity":1,"message":"120","line":3,"column":30,"nodeType":"118","messageId":"119","endLine":3,"endColumn":41},{"ruleId":"116","severity":1,"message":"121","line":4,"column":13,"nodeType":"118","messageId":"119","endLine":4,"endColumn":26},{"ruleId":"116","severity":1,"message":"122","line":11,"column":10,"nodeType":"118","messageId":"119","endLine":11,"endColumn":25},{"ruleId":"116","severity":1,"message":"123","line":42,"column":13,"nodeType":"118","messageId":"119","endLine":42,"endColumn":14},{"ruleId":"116","severity":1,"message":"124","line":43,"column":13,"nodeType":"118","messageId":"119","endLine":43,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":124,"column":45,"nodeType":"127","endLine":124,"endColumn":85},{"ruleId":"125","severity":1,"message":"126","line":112,"column":15,"nodeType":"127","endLine":112,"endColumn":59},{"ruleId":"112","replacedBy":"128"},{"ruleId":"114","replacedBy":"129"},{"ruleId":"112","replacedBy":"130"},{"ruleId":"114","replacedBy":"131"},{"ruleId":"116","severity":1,"message":"132","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":20},{"ruleId":"125","severity":1,"message":"126","line":76,"column":29,"nodeType":"127","endLine":76,"endColumn":69},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'promptActions' is defined but never used.","'finishedLoading' is defined but never used.","'x' is assigned a value but never used.","'y' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["133"],["134"],["133"],["134"],"'LOGIN_PATH' is defined but never used.","no-global-assign","no-unsafe-negation"]