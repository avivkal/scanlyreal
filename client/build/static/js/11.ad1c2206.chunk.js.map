{"version":3,"sources":["Components/Wifi/Wifi.js"],"names":["Wifi","state","username","password","submitUsername","submitPassword","onSubmit","event","preventDefault","props","updateWifiDetails","setState","componentDidMount","loggedIn","getCurrentUser","updateCurrentUser","setLoggedIn","history","push","LOGIN_PATH","load","axios","get","email","then","data","user","wifiUsername","wifiPassword","error","openPrompt","finishedLoading","onChange","target","name","value","this","loading","animation","className","xs","lg","Group","controlId","Label","Control","type","placeholder","e","variant","md","span","offset","onClick","Component","connect","currentUser","main","dispatch","mainActions","title","text","promptActions","loadingActions"],"mappings":"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","file":"static/js/11.ad1c2206.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport * as mainActions from '../../Store/Actions/mainActions'\r\nimport * as promptActions from '../../Store/Actions/promptActions'\r\nimport * as loadingActions from '../../Store/Actions/loadingActions'\r\nimport { LOGIN_PATH } from '../../Constants/const';\r\nimport { getCurrentUser } from '../../UtilityFunctions/functions';\r\nimport { Form, Button, Container, Spinner,Row,Col } from 'react-bootstrap';\r\nimport axios from 'axios'\r\nimport Barcode from 'react-barcode'\r\nimport './wifi.scss'\r\n\r\n\r\nclass Wifi extends Component {\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        submitUsername: false,\r\n        submitPassword: false,\r\n    }\r\n    onSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.updateWifiDetails(this.state.username, this.state.password);\r\n        this.setState({ submitUsername: true })\r\n        // axios.post('/wifi',{email:getCurrentUser().email,wifiUsername: this.state.username,wifiPassword: this.state.password }).then(data => console.log(data))\r\n    };\r\n\r\n    componentDidMount = () => {\r\n        if (!this.props.loggedIn) {\r\n            if (getCurrentUser()) {\r\n                this.props.updateCurrentUser(getCurrentUser())\r\n                this.props.setLoggedIn()\r\n            }\r\n            else {\r\n                this.props.history.push(LOGIN_PATH)\r\n            }\r\n        }\r\n        this.props.load();\r\n        try {\r\n            axios.get('/details/' + getCurrentUser().email).then(data => {\r\n                const user = data.data;\r\n                this.setState({\r\n                    username: user.wifiUsername,\r\n                    password: user.wifiPassword,\r\n                });\r\n            })\r\n        }\r\n        catch (error) {\r\n            this.props.openPrompt('תקלה', 'לא ניתן לבצע את הפעולה');\r\n        }\r\n        finally {\r\n            this.props.finishedLoading();\r\n        }\r\n\r\n    }\r\n\r\n    onChange = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    };\r\n\r\n    render() {\r\n        if (this.props.loading) {\r\n            return <Spinner animation=\"border\" className=\"spinner\" />\r\n        }\r\n\r\n        return (\r\n            <Container>\r\n                {!(this.state.submitUsername || this.state.submitPassword) && <Form onSubmit={this.onSubmit} className=\"form-style\">\r\n                    <Col xs={12} lg={6} className=\"float-right\">\r\n                    <Form.Group controlId=\"formBasicEmail\" className=\"align-right\">\r\n                        <Form.Label>Wifiשם משתמש ל</Form.Label>\r\n                        <Form.Control name=\"username\" type=\"text\" placeholder=\"Enter Wifi Username\" onChange={(e) => this.onChange(e)} value={this.state.username} />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\" className=\"align-right\">\r\n                    <Form.Label>Wifiסיסמה ל</Form.Label>\r\n                        <Form.Control name=\"password\" type=\"password\" placeholder=\"Enter Wifi Password\" onChange={(e) => this.onChange(e)} value={this.state.password} />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        המשך\r\n  </Button>\r\n  </Col>\r\n                </Form>}\r\n                \r\n                {this.state.submitUsername && <Container> <Row className=\"center-style\"> <Col md={{ span: 6, offset: 3 }}\r\n><Barcode value={this.state.username} /></Col> </Row>\r\n                  <Row> <Col md={{ span: 6, offset: 3 }} className=\"center-style\"><Button variant=\"primary\" onClick={()=>this.setState({submitPassword: true, submitUsername: false})}>\r\n                        המשך\r\n  </Button></Col> </Row></Container>}\r\n                {this.state.submitPassword && <Container> <Row className=\"center-style\"> <Col md={{ span: 6, offset: 3 }}\r\n><Barcode value={this.state.password} /></Col> </Row>\r\n                  <Row> <Col md={{ span: 6, offset: 3 }} className=\"center-style\"><Button variant=\"primary\" onClick={()=>this.setState({submitPassword: false, submitUsername: false})}>\r\n                        סיום\r\n  </Button></Col> </Row></Container>}\r\n\r\n\r\n               \r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currentUser: state.main.currentUser,\r\n        loggedIn: state.main.loggedIn,\r\n        loading: state.loading.loading\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateCurrentUser: (user) => dispatch(mainActions.updateUsername(user)),\r\n        setLoggedIn: () => dispatch(mainActions.loggedIn()),\r\n        updateWifiDetails: (username, password) => dispatch(mainActions.updateWifiDetails(username, password)),\r\n        openPrompt: (title, text) => dispatch(promptActions.openPrompt(title, text)),\r\n        load: () => dispatch(loadingActions.loading()),\r\n        finishedLoading: () => dispatch(loadingActions.finishedLoading()),\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Wifi);"],"sourceRoot":""}